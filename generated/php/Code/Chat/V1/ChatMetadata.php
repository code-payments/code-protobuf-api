<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chat/v1/chat_service.proto

namespace Code\Chat\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>code.chat.v1.ChatMetadata</code>
 */
class ChatMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.code.chat.v1.ChatId chat_id = 1 [(.validate.rules) = {</code>
     */
    protected $chat_id = null;
    /**
     * Pointer in the chat indicating the most recently read message by the user
     *
     * Generated from protobuf field <code>.code.chat.v1.Pointer read_pointer = 4;</code>
     */
    protected $read_pointer = null;
    /**
     * Estimated number of unread messages in this chat
     *
     * Generated from protobuf field <code>uint32 num_unread = 5;</code>
     */
    protected $num_unread = 0;
    /**
     * Has the user muted this chat?
     *
     * Generated from protobuf field <code>bool is_muted = 6;</code>
     */
    protected $is_muted = false;
    /**
     * Is the user subscribed to this chat?
     *
     * Generated from protobuf field <code>bool is_subscribed = 7;</code>
     */
    protected $is_subscribed = false;
    /**
     * Can the user mute this chat?
     *
     * Generated from protobuf field <code>bool can_mute = 8;</code>
     */
    protected $can_mute = false;
    /**
     * Can the user unsubscribe from this chat?
     *
     * Generated from protobuf field <code>bool can_unsubscribe = 9;</code>
     */
    protected $can_unsubscribe = false;
    /**
     * Cursor value for this chat for reference in subsequent GetChatsRequest 
     *
     * Generated from protobuf field <code>.code.chat.v1.Cursor cursor = 10;</code>
     */
    protected $cursor = null;
    /**
     * Is this a verified chat?
     * Note: It's possible to have two chats with the same title, but with
     * different verification statuses. They should be treated separately.
     *
     * Generated from protobuf field <code>bool is_verified = 11;</code>
     */
    protected $is_verified = false;
    protected $title;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Code\Chat\V1\ChatId $chat_id
     *     @type \Code\Chat\V1\ServerLocalizedContent $localized
     *     @type \Code\Common\V1\Domain $domain
     *     @type \Code\Chat\V1\Pointer $read_pointer
     *           Pointer in the chat indicating the most recently read message by the user
     *     @type int $num_unread
     *           Estimated number of unread messages in this chat
     *     @type bool $is_muted
     *           Has the user muted this chat?
     *     @type bool $is_subscribed
     *           Is the user subscribed to this chat?
     *     @type bool $can_mute
     *           Can the user mute this chat?
     *     @type bool $can_unsubscribe
     *           Can the user unsubscribe from this chat?
     *     @type \Code\Chat\V1\Cursor $cursor
     *           Cursor value for this chat for reference in subsequent GetChatsRequest 
     *     @type bool $is_verified
     *           Is this a verified chat?
     *           Note: It's possible to have two chats with the same title, but with
     *           different verification statuses. They should be treated separately.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chat\V1\ChatService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.code.chat.v1.ChatId chat_id = 1 [(.validate.rules) = {</code>
     * @return \Code\Chat\V1\ChatId|null
     */
    public function getChatId()
    {
        return $this->chat_id;
    }

    public function hasChatId()
    {
        return isset($this->chat_id);
    }

    public function clearChatId()
    {
        unset($this->chat_id);
    }

    /**
     * Generated from protobuf field <code>.code.chat.v1.ChatId chat_id = 1 [(.validate.rules) = {</code>
     * @param \Code\Chat\V1\ChatId $var
     * @return $this
     */
    public function setChatId($var)
    {
        GPBUtil::checkMessage($var, \Code\Chat\V1\ChatId::class);
        $this->chat_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.chat.v1.ServerLocalizedContent localized = 2;</code>
     * @return \Code\Chat\V1\ServerLocalizedContent|null
     */
    public function getLocalized()
    {
        return $this->readOneof(2);
    }

    public function hasLocalized()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.code.chat.v1.ServerLocalizedContent localized = 2;</code>
     * @param \Code\Chat\V1\ServerLocalizedContent $var
     * @return $this
     */
    public function setLocalized($var)
    {
        GPBUtil::checkMessage($var, \Code\Chat\V1\ServerLocalizedContent::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.common.v1.Domain domain = 3;</code>
     * @return \Code\Common\V1\Domain|null
     */
    public function getDomain()
    {
        return $this->readOneof(3);
    }

    public function hasDomain()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.code.common.v1.Domain domain = 3;</code>
     * @param \Code\Common\V1\Domain $var
     * @return $this
     */
    public function setDomain($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\Domain::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Pointer in the chat indicating the most recently read message by the user
     *
     * Generated from protobuf field <code>.code.chat.v1.Pointer read_pointer = 4;</code>
     * @return \Code\Chat\V1\Pointer|null
     */
    public function getReadPointer()
    {
        return $this->read_pointer;
    }

    public function hasReadPointer()
    {
        return isset($this->read_pointer);
    }

    public function clearReadPointer()
    {
        unset($this->read_pointer);
    }

    /**
     * Pointer in the chat indicating the most recently read message by the user
     *
     * Generated from protobuf field <code>.code.chat.v1.Pointer read_pointer = 4;</code>
     * @param \Code\Chat\V1\Pointer $var
     * @return $this
     */
    public function setReadPointer($var)
    {
        GPBUtil::checkMessage($var, \Code\Chat\V1\Pointer::class);
        $this->read_pointer = $var;

        return $this;
    }

    /**
     * Estimated number of unread messages in this chat
     *
     * Generated from protobuf field <code>uint32 num_unread = 5;</code>
     * @return int
     */
    public function getNumUnread()
    {
        return $this->num_unread;
    }

    /**
     * Estimated number of unread messages in this chat
     *
     * Generated from protobuf field <code>uint32 num_unread = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setNumUnread($var)
    {
        GPBUtil::checkUint32($var);
        $this->num_unread = $var;

        return $this;
    }

    /**
     * Has the user muted this chat?
     *
     * Generated from protobuf field <code>bool is_muted = 6;</code>
     * @return bool
     */
    public function getIsMuted()
    {
        return $this->is_muted;
    }

    /**
     * Has the user muted this chat?
     *
     * Generated from protobuf field <code>bool is_muted = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsMuted($var)
    {
        GPBUtil::checkBool($var);
        $this->is_muted = $var;

        return $this;
    }

    /**
     * Is the user subscribed to this chat?
     *
     * Generated from protobuf field <code>bool is_subscribed = 7;</code>
     * @return bool
     */
    public function getIsSubscribed()
    {
        return $this->is_subscribed;
    }

    /**
     * Is the user subscribed to this chat?
     *
     * Generated from protobuf field <code>bool is_subscribed = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsSubscribed($var)
    {
        GPBUtil::checkBool($var);
        $this->is_subscribed = $var;

        return $this;
    }

    /**
     * Can the user mute this chat?
     *
     * Generated from protobuf field <code>bool can_mute = 8;</code>
     * @return bool
     */
    public function getCanMute()
    {
        return $this->can_mute;
    }

    /**
     * Can the user mute this chat?
     *
     * Generated from protobuf field <code>bool can_mute = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setCanMute($var)
    {
        GPBUtil::checkBool($var);
        $this->can_mute = $var;

        return $this;
    }

    /**
     * Can the user unsubscribe from this chat?
     *
     * Generated from protobuf field <code>bool can_unsubscribe = 9;</code>
     * @return bool
     */
    public function getCanUnsubscribe()
    {
        return $this->can_unsubscribe;
    }

    /**
     * Can the user unsubscribe from this chat?
     *
     * Generated from protobuf field <code>bool can_unsubscribe = 9;</code>
     * @param bool $var
     * @return $this
     */
    public function setCanUnsubscribe($var)
    {
        GPBUtil::checkBool($var);
        $this->can_unsubscribe = $var;

        return $this;
    }

    /**
     * Cursor value for this chat for reference in subsequent GetChatsRequest 
     *
     * Generated from protobuf field <code>.code.chat.v1.Cursor cursor = 10;</code>
     * @return \Code\Chat\V1\Cursor|null
     */
    public function getCursor()
    {
        return $this->cursor;
    }

    public function hasCursor()
    {
        return isset($this->cursor);
    }

    public function clearCursor()
    {
        unset($this->cursor);
    }

    /**
     * Cursor value for this chat for reference in subsequent GetChatsRequest 
     *
     * Generated from protobuf field <code>.code.chat.v1.Cursor cursor = 10;</code>
     * @param \Code\Chat\V1\Cursor $var
     * @return $this
     */
    public function setCursor($var)
    {
        GPBUtil::checkMessage($var, \Code\Chat\V1\Cursor::class);
        $this->cursor = $var;

        return $this;
    }

    /**
     * Is this a verified chat?
     * Note: It's possible to have two chats with the same title, but with
     * different verification statuses. They should be treated separately.
     *
     * Generated from protobuf field <code>bool is_verified = 11;</code>
     * @return bool
     */
    public function getIsVerified()
    {
        return $this->is_verified;
    }

    /**
     * Is this a verified chat?
     * Note: It's possible to have two chats with the same title, but with
     * different verification statuses. They should be treated separately.
     *
     * Generated from protobuf field <code>bool is_verified = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsVerified($var)
    {
        GPBUtil::checkBool($var);
        $this->is_verified = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getTitle()
    {
        return $this->whichOneof("title");
    }

}

