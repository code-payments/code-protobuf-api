<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chat/v2/chat_service.proto

namespace Code\Chat\V2\ExchangeDataContent;

use UnexpectedValueException;

/**
 * Protobuf type <code>code.chat.v2.ExchangeDataContent.Verb</code>
 */
class Verb
{
    /**
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>GAVE = 1;</code>
     */
    const GAVE = 1;
    /**
     * Generated from protobuf enum <code>RECEIVED = 2;</code>
     */
    const RECEIVED = 2;
    /**
     * Generated from protobuf enum <code>WITHDREW = 3;</code>
     */
    const WITHDREW = 3;
    /**
     * Generated from protobuf enum <code>DEPOSITED = 4;</code>
     */
    const DEPOSITED = 4;
    /**
     * Generated from protobuf enum <code>SENT = 5;</code>
     */
    const SENT = 5;
    /**
     * Generated from protobuf enum <code>RETURNED = 6;</code>
     */
    const RETURNED = 6;
    /**
     * Generated from protobuf enum <code>SPENT = 7;</code>
     */
    const SPENT = 7;
    /**
     * Generated from protobuf enum <code>PAID = 8;</code>
     */
    const PAID = 8;
    /**
     * Generated from protobuf enum <code>PURCHASED = 9;</code>
     */
    const PURCHASED = 9;
    /**
     * Generated from protobuf enum <code>RECEIVED_TIP = 10;</code>
     */
    const RECEIVED_TIP = 10;
    /**
     * Generated from protobuf enum <code>SENT_TIP = 11;</code>
     */
    const SENT_TIP = 11;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::GAVE => 'GAVE',
        self::RECEIVED => 'RECEIVED',
        self::WITHDREW => 'WITHDREW',
        self::DEPOSITED => 'DEPOSITED',
        self::SENT => 'SENT',
        self::RETURNED => 'RETURNED',
        self::SPENT => 'SPENT',
        self::PAID => 'PAID',
        self::PURCHASED => 'PURCHASED',
        self::RECEIVED_TIP => 'RECEIVED_TIP',
        self::SENT_TIP => 'SENT_TIP',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Verb::class, \Code\Chat\V2\ExchangeDataContent_Verb::class);

