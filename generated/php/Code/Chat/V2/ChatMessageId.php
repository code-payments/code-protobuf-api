<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chat/v2/chat_service.proto

namespace Code\Chat\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>code.chat.v2.ChatMessageId</code>
 */
class ChatMessageId extends \Google\Protobuf\Internal\Message
{
    /**
     * Guaranteed to be a time-based UUID. This should be used to construct a
     * consistently ordered message history based on time using a simple byte
     * comparison.
     *
     * Generated from protobuf field <code>bytes value = 1 [(.validate.rules) = {</code>
     */
    protected $value = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $value
     *           Guaranteed to be a time-based UUID. This should be used to construct a
     *           consistently ordered message history based on time using a simple byte
     *           comparison.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Chat\V2\ChatService::initOnce();
        parent::__construct($data);
    }

    /**
     * Guaranteed to be a time-based UUID. This should be used to construct a
     * consistently ordered message history based on time using a simple byte
     * comparison.
     *
     * Generated from protobuf field <code>bytes value = 1 [(.validate.rules) = {</code>
     * @return string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * Guaranteed to be a time-based UUID. This should be used to construct a
     * consistently ordered message history based on time using a simple byte
     * comparison.
     *
     * Generated from protobuf field <code>bytes value = 1 [(.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, False);
        $this->value = $var;

        return $this;
    }

}

