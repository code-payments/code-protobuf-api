<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: contact/v1/contact_list_service.proto

namespace Code\Contact\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>code.contact.v1.GetContactsRequest</code>
 */
class GetContactsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The public key of the owner account that signed this request message.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner_account_id = 1 [(.validate.rules) = {</code>
     */
    protected $owner_account_id = null;
    /**
     * The signature is of serialize(GetContactsRequest) without this field set
     * using the private key of owner_account_id. This provides an authentication
     * mechanism to the RPC.
     *
     * Generated from protobuf field <code>.code.common.v1.Signature signature = 2 [(.validate.rules) = {</code>
     */
    protected $signature = null;
    /**
     * The data container for the copy of the contact list being fetched.
     *
     * Generated from protobuf field <code>.code.common.v1.DataContainerId container_id = 3 [(.validate.rules) = {</code>
     */
    protected $container_id = null;
    /**
     * The page token, which is retreived from a previous response, to get the next
     * set of contacts. The first page is returned when not set.
     *
     * Generated from protobuf field <code>.code.contact.v1.PageToken page_token = 4;</code>
     */
    protected $page_token = null;
    /**
     * Filter out contacts that have an association with Code. This includes users
     * that have both been invited and registered with the app.
     *
     * Generated from protobuf field <code>bool include_only_in_app_contacts = 5;</code>
     */
    protected $include_only_in_app_contacts = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Code\Common\V1\SolanaAccountId $owner_account_id
     *           The public key of the owner account that signed this request message.
     *     @type \Code\Common\V1\Signature $signature
     *           The signature is of serialize(GetContactsRequest) without this field set
     *           using the private key of owner_account_id. This provides an authentication
     *           mechanism to the RPC.
     *     @type \Code\Common\V1\DataContainerId $container_id
     *           The data container for the copy of the contact list being fetched.
     *     @type \Code\Contact\V1\PageToken $page_token
     *           The page token, which is retreived from a previous response, to get the next
     *           set of contacts. The first page is returned when not set.
     *     @type bool $include_only_in_app_contacts
     *           Filter out contacts that have an association with Code. This includes users
     *           that have both been invited and registered with the app.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Contact\V1\ContactListService::initOnce();
        parent::__construct($data);
    }

    /**
     * The public key of the owner account that signed this request message.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner_account_id = 1 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\SolanaAccountId|null
     */
    public function getOwnerAccountId()
    {
        return $this->owner_account_id;
    }

    public function hasOwnerAccountId()
    {
        return isset($this->owner_account_id);
    }

    public function clearOwnerAccountId()
    {
        unset($this->owner_account_id);
    }

    /**
     * The public key of the owner account that signed this request message.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner_account_id = 1 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\SolanaAccountId $var
     * @return $this
     */
    public function setOwnerAccountId($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\SolanaAccountId::class);
        $this->owner_account_id = $var;

        return $this;
    }

    /**
     * The signature is of serialize(GetContactsRequest) without this field set
     * using the private key of owner_account_id. This provides an authentication
     * mechanism to the RPC.
     *
     * Generated from protobuf field <code>.code.common.v1.Signature signature = 2 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\Signature|null
     */
    public function getSignature()
    {
        return $this->signature;
    }

    public function hasSignature()
    {
        return isset($this->signature);
    }

    public function clearSignature()
    {
        unset($this->signature);
    }

    /**
     * The signature is of serialize(GetContactsRequest) without this field set
     * using the private key of owner_account_id. This provides an authentication
     * mechanism to the RPC.
     *
     * Generated from protobuf field <code>.code.common.v1.Signature signature = 2 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\Signature $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\Signature::class);
        $this->signature = $var;

        return $this;
    }

    /**
     * The data container for the copy of the contact list being fetched.
     *
     * Generated from protobuf field <code>.code.common.v1.DataContainerId container_id = 3 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\DataContainerId|null
     */
    public function getContainerId()
    {
        return $this->container_id;
    }

    public function hasContainerId()
    {
        return isset($this->container_id);
    }

    public function clearContainerId()
    {
        unset($this->container_id);
    }

    /**
     * The data container for the copy of the contact list being fetched.
     *
     * Generated from protobuf field <code>.code.common.v1.DataContainerId container_id = 3 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\DataContainerId $var
     * @return $this
     */
    public function setContainerId($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\DataContainerId::class);
        $this->container_id = $var;

        return $this;
    }

    /**
     * The page token, which is retreived from a previous response, to get the next
     * set of contacts. The first page is returned when not set.
     *
     * Generated from protobuf field <code>.code.contact.v1.PageToken page_token = 4;</code>
     * @return \Code\Contact\V1\PageToken|null
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    public function hasPageToken()
    {
        return isset($this->page_token);
    }

    public function clearPageToken()
    {
        unset($this->page_token);
    }

    /**
     * The page token, which is retreived from a previous response, to get the next
     * set of contacts. The first page is returned when not set.
     *
     * Generated from protobuf field <code>.code.contact.v1.PageToken page_token = 4;</code>
     * @param \Code\Contact\V1\PageToken $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkMessage($var, \Code\Contact\V1\PageToken::class);
        $this->page_token = $var;

        return $this;
    }

    /**
     * Filter out contacts that have an association with Code. This includes users
     * that have both been invited and registered with the app.
     *
     * Generated from protobuf field <code>bool include_only_in_app_contacts = 5;</code>
     * @return bool
     */
    public function getIncludeOnlyInAppContacts()
    {
        return $this->include_only_in_app_contacts;
    }

    /**
     * Filter out contacts that have an association with Code. This includes users
     * that have both been invited and registered with the app.
     *
     * Generated from protobuf field <code>bool include_only_in_app_contacts = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setIncludeOnlyInAppContacts($var)
    {
        GPBUtil::checkBool($var);
        $this->include_only_in_app_contacts = $var;

        return $this;
    }

}

