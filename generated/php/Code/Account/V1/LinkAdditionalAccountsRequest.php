<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: account/v1/account_service.proto

namespace Code\Account\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>code.account.v1.LinkAdditionalAccountsRequest</code>
 */
class LinkAdditionalAccountsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The owner account to link to
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner = 1 [(.validate.rules) = {</code>
     */
    protected $owner = null;
    /**
     * The authority account derived off the user's 12 words, which contains
     * the USDC ATA (and potentially others in the future) that will be used
     * in swaps.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId swap_authority = 2 [(.validate.rules) = {</code>
     */
    protected $swap_authority = null;
    /**
     * Signature values for each account provided in this request. Each signature
     * must be generated without this array set. The expected ordering of signatures:
     *  1. owner
     *  2. swap_authority
     *
     * Generated from protobuf field <code>repeated .code.common.v1.Signature signatures = 3 [(.validate.rules) = {</code>
     */
    private $signatures;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Code\Common\V1\SolanaAccountId $owner
     *           The owner account to link to
     *     @type \Code\Common\V1\SolanaAccountId $swap_authority
     *           The authority account derived off the user's 12 words, which contains
     *           the USDC ATA (and potentially others in the future) that will be used
     *           in swaps.
     *     @type array<\Code\Common\V1\Signature>|\Google\Protobuf\Internal\RepeatedField $signatures
     *           Signature values for each account provided in this request. Each signature
     *           must be generated without this array set. The expected ordering of signatures:
     *            1. owner
     *            2. swap_authority
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Account\V1\AccountService::initOnce();
        parent::__construct($data);
    }

    /**
     * The owner account to link to
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner = 1 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\SolanaAccountId|null
     */
    public function getOwner()
    {
        return $this->owner;
    }

    public function hasOwner()
    {
        return isset($this->owner);
    }

    public function clearOwner()
    {
        unset($this->owner);
    }

    /**
     * The owner account to link to
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner = 1 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\SolanaAccountId $var
     * @return $this
     */
    public function setOwner($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\SolanaAccountId::class);
        $this->owner = $var;

        return $this;
    }

    /**
     * The authority account derived off the user's 12 words, which contains
     * the USDC ATA (and potentially others in the future) that will be used
     * in swaps.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId swap_authority = 2 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\SolanaAccountId|null
     */
    public function getSwapAuthority()
    {
        return $this->swap_authority;
    }

    public function hasSwapAuthority()
    {
        return isset($this->swap_authority);
    }

    public function clearSwapAuthority()
    {
        unset($this->swap_authority);
    }

    /**
     * The authority account derived off the user's 12 words, which contains
     * the USDC ATA (and potentially others in the future) that will be used
     * in swaps.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId swap_authority = 2 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\SolanaAccountId $var
     * @return $this
     */
    public function setSwapAuthority($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\SolanaAccountId::class);
        $this->swap_authority = $var;

        return $this;
    }

    /**
     * Signature values for each account provided in this request. Each signature
     * must be generated without this array set. The expected ordering of signatures:
     *  1. owner
     *  2. swap_authority
     *
     * Generated from protobuf field <code>repeated .code.common.v1.Signature signatures = 3 [(.validate.rules) = {</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSignatures()
    {
        return $this->signatures;
    }

    /**
     * Signature values for each account provided in this request. Each signature
     * must be generated without this array set. The expected ordering of signatures:
     *  1. owner
     *  2. swap_authority
     *
     * Generated from protobuf field <code>repeated .code.common.v1.Signature signatures = 3 [(.validate.rules) = {</code>
     * @param array<\Code\Common\V1\Signature>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSignatures($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Code\Common\V1\Signature::class);
        $this->signatures = $arr;

        return $this;
    }

}

