<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction/v2/transaction_service.proto

namespace Code\Transaction\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ServerParameter are a set of parameters known and returned by server that
 * enables clients to complete transaction construction. Any necessary proofs,
 * which are required to be locally verifiable, are also provided to ensure
 * safe use in the event of a malicious server.
 *
 * Generated from protobuf message <code>code.transaction.v2.ServerParameter</code>
 */
class ServerParameter extends \Google\Protobuf\Internal\Message
{
    /**
     * The action the server parameters belong to
     *
     * Generated from protobuf field <code>uint32 action_id = 1;</code>
     */
    protected $action_id = 0;
    /**
     * The set of nonces used for the action. Server will only provide values
     * for transactions requiring client signatures.
     *
     * Generated from protobuf field <code>repeated .code.transaction.v2.NoncedTransactionMetadata nonces = 2 [(.validate.rules) = {</code>
     */
    private $nonces;
    protected $type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $action_id
     *           The action the server parameters belong to
     *     @type array<\Code\Transaction\V2\NoncedTransactionMetadata>|\Google\Protobuf\Internal\RepeatedField $nonces
     *           The set of nonces used for the action. Server will only provide values
     *           for transactions requiring client signatures.
     *     @type \Code\Transaction\V2\OpenAccountServerParameter $open_account
     *     @type \Code\Transaction\V2\CloseEmptyAccountServerParameter $close_empty_account
     *     @type \Code\Transaction\V2\CloseDormantAccountServerParameter $close_dormant_account
     *     @type \Code\Transaction\V2\NoPrivacyTransferServerParameter $no_privacy_transfer
     *     @type \Code\Transaction\V2\NoPrivacyWithdrawServerParameter $no_privacy_withdraw
     *     @type \Code\Transaction\V2\TemporaryPrivacyTransferServerParameter $temporary_privacy_transfer
     *     @type \Code\Transaction\V2\TemporaryPrivacyExchangeServerParameter $temporary_privacy_exchange
     *     @type \Code\Transaction\V2\PermanentPrivacyUpgradeServerParameter $permanent_privacy_upgrade
     *     @type \Code\Transaction\V2\FeePaymentServerParameter $fee_payment
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Transaction\V2\TransactionService::initOnce();
        parent::__construct($data);
    }

    /**
     * The action the server parameters belong to
     *
     * Generated from protobuf field <code>uint32 action_id = 1;</code>
     * @return int
     */
    public function getActionId()
    {
        return $this->action_id;
    }

    /**
     * The action the server parameters belong to
     *
     * Generated from protobuf field <code>uint32 action_id = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setActionId($var)
    {
        GPBUtil::checkUint32($var);
        $this->action_id = $var;

        return $this;
    }

    /**
     * The set of nonces used for the action. Server will only provide values
     * for transactions requiring client signatures.
     *
     * Generated from protobuf field <code>repeated .code.transaction.v2.NoncedTransactionMetadata nonces = 2 [(.validate.rules) = {</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNonces()
    {
        return $this->nonces;
    }

    /**
     * The set of nonces used for the action. Server will only provide values
     * for transactions requiring client signatures.
     *
     * Generated from protobuf field <code>repeated .code.transaction.v2.NoncedTransactionMetadata nonces = 2 [(.validate.rules) = {</code>
     * @param array<\Code\Transaction\V2\NoncedTransactionMetadata>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNonces($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Code\Transaction\V2\NoncedTransactionMetadata::class);
        $this->nonces = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.OpenAccountServerParameter open_account = 3;</code>
     * @return \Code\Transaction\V2\OpenAccountServerParameter|null
     */
    public function getOpenAccount()
    {
        return $this->readOneof(3);
    }

    public function hasOpenAccount()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.OpenAccountServerParameter open_account = 3;</code>
     * @param \Code\Transaction\V2\OpenAccountServerParameter $var
     * @return $this
     */
    public function setOpenAccount($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\OpenAccountServerParameter::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.CloseEmptyAccountServerParameter close_empty_account = 4;</code>
     * @return \Code\Transaction\V2\CloseEmptyAccountServerParameter|null
     */
    public function getCloseEmptyAccount()
    {
        return $this->readOneof(4);
    }

    public function hasCloseEmptyAccount()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.CloseEmptyAccountServerParameter close_empty_account = 4;</code>
     * @param \Code\Transaction\V2\CloseEmptyAccountServerParameter $var
     * @return $this
     */
    public function setCloseEmptyAccount($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\CloseEmptyAccountServerParameter::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.CloseDormantAccountServerParameter close_dormant_account = 5;</code>
     * @return \Code\Transaction\V2\CloseDormantAccountServerParameter|null
     */
    public function getCloseDormantAccount()
    {
        return $this->readOneof(5);
    }

    public function hasCloseDormantAccount()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.CloseDormantAccountServerParameter close_dormant_account = 5;</code>
     * @param \Code\Transaction\V2\CloseDormantAccountServerParameter $var
     * @return $this
     */
    public function setCloseDormantAccount($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\CloseDormantAccountServerParameter::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.NoPrivacyTransferServerParameter no_privacy_transfer = 6;</code>
     * @return \Code\Transaction\V2\NoPrivacyTransferServerParameter|null
     */
    public function getNoPrivacyTransfer()
    {
        return $this->readOneof(6);
    }

    public function hasNoPrivacyTransfer()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.NoPrivacyTransferServerParameter no_privacy_transfer = 6;</code>
     * @param \Code\Transaction\V2\NoPrivacyTransferServerParameter $var
     * @return $this
     */
    public function setNoPrivacyTransfer($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\NoPrivacyTransferServerParameter::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.NoPrivacyWithdrawServerParameter no_privacy_withdraw = 7;</code>
     * @return \Code\Transaction\V2\NoPrivacyWithdrawServerParameter|null
     */
    public function getNoPrivacyWithdraw()
    {
        return $this->readOneof(7);
    }

    public function hasNoPrivacyWithdraw()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.NoPrivacyWithdrawServerParameter no_privacy_withdraw = 7;</code>
     * @param \Code\Transaction\V2\NoPrivacyWithdrawServerParameter $var
     * @return $this
     */
    public function setNoPrivacyWithdraw($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\NoPrivacyWithdrawServerParameter::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.TemporaryPrivacyTransferServerParameter temporary_privacy_transfer = 8;</code>
     * @return \Code\Transaction\V2\TemporaryPrivacyTransferServerParameter|null
     */
    public function getTemporaryPrivacyTransfer()
    {
        return $this->readOneof(8);
    }

    public function hasTemporaryPrivacyTransfer()
    {
        return $this->hasOneof(8);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.TemporaryPrivacyTransferServerParameter temporary_privacy_transfer = 8;</code>
     * @param \Code\Transaction\V2\TemporaryPrivacyTransferServerParameter $var
     * @return $this
     */
    public function setTemporaryPrivacyTransfer($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\TemporaryPrivacyTransferServerParameter::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.TemporaryPrivacyExchangeServerParameter temporary_privacy_exchange = 9;</code>
     * @return \Code\Transaction\V2\TemporaryPrivacyExchangeServerParameter|null
     */
    public function getTemporaryPrivacyExchange()
    {
        return $this->readOneof(9);
    }

    public function hasTemporaryPrivacyExchange()
    {
        return $this->hasOneof(9);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.TemporaryPrivacyExchangeServerParameter temporary_privacy_exchange = 9;</code>
     * @param \Code\Transaction\V2\TemporaryPrivacyExchangeServerParameter $var
     * @return $this
     */
    public function setTemporaryPrivacyExchange($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\TemporaryPrivacyExchangeServerParameter::class);
        $this->writeOneof(9, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.PermanentPrivacyUpgradeServerParameter permanent_privacy_upgrade = 10;</code>
     * @return \Code\Transaction\V2\PermanentPrivacyUpgradeServerParameter|null
     */
    public function getPermanentPrivacyUpgrade()
    {
        return $this->readOneof(10);
    }

    public function hasPermanentPrivacyUpgrade()
    {
        return $this->hasOneof(10);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.PermanentPrivacyUpgradeServerParameter permanent_privacy_upgrade = 10;</code>
     * @param \Code\Transaction\V2\PermanentPrivacyUpgradeServerParameter $var
     * @return $this
     */
    public function setPermanentPrivacyUpgrade($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\PermanentPrivacyUpgradeServerParameter::class);
        $this->writeOneof(10, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.FeePaymentServerParameter fee_payment = 11;</code>
     * @return \Code\Transaction\V2\FeePaymentServerParameter|null
     */
    public function getFeePayment()
    {
        return $this->readOneof(11);
    }

    public function hasFeePayment()
    {
        return $this->hasOneof(11);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.FeePaymentServerParameter fee_payment = 11;</code>
     * @param \Code\Transaction\V2\FeePaymentServerParameter $var
     * @return $this
     */
    public function setFeePayment($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\FeePaymentServerParameter::class);
        $this->writeOneof(11, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->whichOneof("type");
    }

}

