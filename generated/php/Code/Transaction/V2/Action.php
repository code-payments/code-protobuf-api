<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction/v2/transaction_service.proto

namespace Code\Transaction\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Action is a well-defined, ordered and small set of transactions for a unit of work
 * that the client wants to perform on the blockchain. Clients provide parameters known
 * to them in the action.
 *
 * Generated from protobuf message <code>code.transaction.v2.Action</code>
 */
class Action extends \Google\Protobuf\Internal\Message
{
    /**
     * The ID of this action, which is unique within an intent. It must match
     * the index of the action's location in the SubmitAction's actions field.
     *
     * Generated from protobuf field <code>uint32 id = 1;</code>
     */
    protected $id = 0;
    protected $type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $id
     *           The ID of this action, which is unique within an intent. It must match
     *           the index of the action's location in the SubmitAction's actions field.
     *     @type \Code\Transaction\V2\OpenAccountAction $open_account
     *     @type \Code\Transaction\V2\CloseEmptyAccountAction $close_empty_account
     *     @type \Code\Transaction\V2\CloseDormantAccountAction $close_dormant_account
     *     @type \Code\Transaction\V2\NoPrivacyTransferAction $no_privacy_transfer
     *     @type \Code\Transaction\V2\NoPrivacyWithdrawAction $no_privacy_withdraw
     *     @type \Code\Transaction\V2\TemporaryPrivacyTransferAction $temporary_privacy_transfer
     *     @type \Code\Transaction\V2\TemporaryPrivacyExchangeAction $temporary_privacy_exchange
     *     @type \Code\Transaction\V2\PermanentPrivacyUpgradeAction $permanent_privacy_upgrade
     *     @type \Code\Transaction\V2\FeePaymentAction $fee_payment
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Transaction\V2\TransactionService::initOnce();
        parent::__construct($data);
    }

    /**
     * The ID of this action, which is unique within an intent. It must match
     * the index of the action's location in the SubmitAction's actions field.
     *
     * Generated from protobuf field <code>uint32 id = 1;</code>
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * The ID of this action, which is unique within an intent. It must match
     * the index of the action's location in the SubmitAction's actions field.
     *
     * Generated from protobuf field <code>uint32 id = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkUint32($var);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.OpenAccountAction open_account = 2;</code>
     * @return \Code\Transaction\V2\OpenAccountAction|null
     */
    public function getOpenAccount()
    {
        return $this->readOneof(2);
    }

    public function hasOpenAccount()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.OpenAccountAction open_account = 2;</code>
     * @param \Code\Transaction\V2\OpenAccountAction $var
     * @return $this
     */
    public function setOpenAccount($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\OpenAccountAction::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.CloseEmptyAccountAction close_empty_account = 3;</code>
     * @return \Code\Transaction\V2\CloseEmptyAccountAction|null
     */
    public function getCloseEmptyAccount()
    {
        return $this->readOneof(3);
    }

    public function hasCloseEmptyAccount()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.CloseEmptyAccountAction close_empty_account = 3;</code>
     * @param \Code\Transaction\V2\CloseEmptyAccountAction $var
     * @return $this
     */
    public function setCloseEmptyAccount($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\CloseEmptyAccountAction::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.CloseDormantAccountAction close_dormant_account = 4;</code>
     * @return \Code\Transaction\V2\CloseDormantAccountAction|null
     */
    public function getCloseDormantAccount()
    {
        return $this->readOneof(4);
    }

    public function hasCloseDormantAccount()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.CloseDormantAccountAction close_dormant_account = 4;</code>
     * @param \Code\Transaction\V2\CloseDormantAccountAction $var
     * @return $this
     */
    public function setCloseDormantAccount($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\CloseDormantAccountAction::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.NoPrivacyTransferAction no_privacy_transfer = 5;</code>
     * @return \Code\Transaction\V2\NoPrivacyTransferAction|null
     */
    public function getNoPrivacyTransfer()
    {
        return $this->readOneof(5);
    }

    public function hasNoPrivacyTransfer()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.NoPrivacyTransferAction no_privacy_transfer = 5;</code>
     * @param \Code\Transaction\V2\NoPrivacyTransferAction $var
     * @return $this
     */
    public function setNoPrivacyTransfer($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\NoPrivacyTransferAction::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.NoPrivacyWithdrawAction no_privacy_withdraw = 6;</code>
     * @return \Code\Transaction\V2\NoPrivacyWithdrawAction|null
     */
    public function getNoPrivacyWithdraw()
    {
        return $this->readOneof(6);
    }

    public function hasNoPrivacyWithdraw()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.NoPrivacyWithdrawAction no_privacy_withdraw = 6;</code>
     * @param \Code\Transaction\V2\NoPrivacyWithdrawAction $var
     * @return $this
     */
    public function setNoPrivacyWithdraw($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\NoPrivacyWithdrawAction::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.TemporaryPrivacyTransferAction temporary_privacy_transfer = 7;</code>
     * @return \Code\Transaction\V2\TemporaryPrivacyTransferAction|null
     */
    public function getTemporaryPrivacyTransfer()
    {
        return $this->readOneof(7);
    }

    public function hasTemporaryPrivacyTransfer()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.TemporaryPrivacyTransferAction temporary_privacy_transfer = 7;</code>
     * @param \Code\Transaction\V2\TemporaryPrivacyTransferAction $var
     * @return $this
     */
    public function setTemporaryPrivacyTransfer($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\TemporaryPrivacyTransferAction::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.TemporaryPrivacyExchangeAction temporary_privacy_exchange = 8;</code>
     * @return \Code\Transaction\V2\TemporaryPrivacyExchangeAction|null
     */
    public function getTemporaryPrivacyExchange()
    {
        return $this->readOneof(8);
    }

    public function hasTemporaryPrivacyExchange()
    {
        return $this->hasOneof(8);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.TemporaryPrivacyExchangeAction temporary_privacy_exchange = 8;</code>
     * @param \Code\Transaction\V2\TemporaryPrivacyExchangeAction $var
     * @return $this
     */
    public function setTemporaryPrivacyExchange($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\TemporaryPrivacyExchangeAction::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.PermanentPrivacyUpgradeAction permanent_privacy_upgrade = 9;</code>
     * @return \Code\Transaction\V2\PermanentPrivacyUpgradeAction|null
     */
    public function getPermanentPrivacyUpgrade()
    {
        return $this->readOneof(9);
    }

    public function hasPermanentPrivacyUpgrade()
    {
        return $this->hasOneof(9);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.PermanentPrivacyUpgradeAction permanent_privacy_upgrade = 9;</code>
     * @param \Code\Transaction\V2\PermanentPrivacyUpgradeAction $var
     * @return $this
     */
    public function setPermanentPrivacyUpgrade($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\PermanentPrivacyUpgradeAction::class);
        $this->writeOneof(9, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.FeePaymentAction fee_payment = 10;</code>
     * @return \Code\Transaction\V2\FeePaymentAction|null
     */
    public function getFeePayment()
    {
        return $this->readOneof(10);
    }

    public function hasFeePayment()
    {
        return $this->hasOneof(10);
    }

    /**
     * Generated from protobuf field <code>.code.transaction.v2.FeePaymentAction fee_payment = 10;</code>
     * @param \Code\Transaction\V2\FeePaymentAction $var
     * @return $this
     */
    public function setFeePayment($var)
    {
        GPBUtil::checkMessage($var, \Code\Transaction\V2\FeePaymentAction::class);
        $this->writeOneof(10, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->whichOneof("type");
    }

}

