<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction/v2/transaction_service.proto

namespace Code\Transaction\V2\PaymentHistoryItem;

use UnexpectedValueException;

/**
 * Protobuf type <code>code.transaction.v2.PaymentHistoryItem.PaymentType</code>
 */
class PaymentType
{
    /**
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>SEND = 1;</code>
     */
    const SEND = 1;
    /**
     * Generated from protobuf enum <code>RECEIVE = 2;</code>
     */
    const RECEIVE = 2;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::SEND => 'SEND',
        self::RECEIVE => 'RECEIVE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PaymentType::class, \Code\Transaction\V2\PaymentHistoryItem_PaymentType::class);

