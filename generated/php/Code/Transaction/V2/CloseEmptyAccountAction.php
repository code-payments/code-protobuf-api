<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction/v2/transaction_service.proto

namespace Code\Transaction\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Transaction 1
 *  Instructions:
 *    1. system::AdvanceNonce
 *    2. timelock::BurnDustWithAuthority (max 1 Kin)
 *    3. timelock::CloseAccounts
 *  Client Signature Required: Yes
 *
 * Generated from protobuf message <code>code.transaction.v2.CloseEmptyAccountAction</code>
 */
class CloseEmptyAccountAction extends \Google\Protobuf\Internal\Message
{
    /**
     * The type of account being closed
     *
     * Generated from protobuf field <code>.code.common.v1.AccountType account_type = 1 [(.validate.rules) = {</code>
     */
    protected $account_type = 0;
    /**
     * The public key of the private key that has authority over the token account
     * that should be closed
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId authority = 2 [(.validate.rules) = {</code>
     */
    protected $authority = null;
    /**
     * The token account being closed
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId token = 3 [(.validate.rules) = {</code>
     */
    protected $token = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $account_type
     *           The type of account being closed
     *     @type \Code\Common\V1\SolanaAccountId $authority
     *           The public key of the private key that has authority over the token account
     *           that should be closed
     *     @type \Code\Common\V1\SolanaAccountId $token
     *           The token account being closed
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Transaction\V2\TransactionService::initOnce();
        parent::__construct($data);
    }

    /**
     * The type of account being closed
     *
     * Generated from protobuf field <code>.code.common.v1.AccountType account_type = 1 [(.validate.rules) = {</code>
     * @return int
     */
    public function getAccountType()
    {
        return $this->account_type;
    }

    /**
     * The type of account being closed
     *
     * Generated from protobuf field <code>.code.common.v1.AccountType account_type = 1 [(.validate.rules) = {</code>
     * @param int $var
     * @return $this
     */
    public function setAccountType($var)
    {
        GPBUtil::checkEnum($var, \Code\Common\V1\AccountType::class);
        $this->account_type = $var;

        return $this;
    }

    /**
     * The public key of the private key that has authority over the token account
     * that should be closed
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId authority = 2 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\SolanaAccountId|null
     */
    public function getAuthority()
    {
        return $this->authority;
    }

    public function hasAuthority()
    {
        return isset($this->authority);
    }

    public function clearAuthority()
    {
        unset($this->authority);
    }

    /**
     * The public key of the private key that has authority over the token account
     * that should be closed
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId authority = 2 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\SolanaAccountId $var
     * @return $this
     */
    public function setAuthority($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\SolanaAccountId::class);
        $this->authority = $var;

        return $this;
    }

    /**
     * The token account being closed
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId token = 3 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\SolanaAccountId|null
     */
    public function getToken()
    {
        return $this->token;
    }

    public function hasToken()
    {
        return isset($this->token);
    }

    public function clearToken()
    {
        unset($this->token);
    }

    /**
     * The token account being closed
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId token = 3 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\SolanaAccountId $var
     * @return $this
     */
    public function setToken($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\SolanaAccountId::class);
        $this->token = $var;

        return $this;
    }

}

