<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction/v2/transaction_service.proto

namespace Code\Transaction\V2\DeniedErrorDetails;

use UnexpectedValueException;

/**
 * Protobuf type <code>code.transaction.v2.DeniedErrorDetails.Code</code>
 */
class Code
{
    /**
     * Reason code not yet defined
     *
     * Generated from protobuf enum <code>UNSPECIFIED = 0;</code>
     */
    const UNSPECIFIED = 0;
    /**
     * Phone number has exceeded its free account allocation
     *
     * Generated from protobuf enum <code>TOO_MANY_FREE_ACCOUNTS_FOR_PHONE_NUMBER = 1;</code>
     */
    const TOO_MANY_FREE_ACCOUNTS_FOR_PHONE_NUMBER = 1;
    /**
     * Device has exceeded its free account allocation
     *
     * Generated from protobuf enum <code>TOO_MANY_FREE_ACCOUNTS_FOR_DEVICE = 2;</code>
     */
    const TOO_MANY_FREE_ACCOUNTS_FOR_DEVICE = 2;
    /**
     * The country associated with the phone number with the account is not
     * supported (eg. it is on the sanctioned list).
     *
     * Generated from protobuf enum <code>UNSUPPORTED_COUNTRY = 3;</code>
     */
    const UNSUPPORTED_COUNTRY = 3;
    /**
     * The device is not supported (eg. it fails device attestation checks)
     *
     * Generated from protobuf enum <code>UNSUPPORTED_DEVICE = 4;</code>
     */
    const UNSUPPORTED_DEVICE = 4;

    private static $valueToName = [
        self::UNSPECIFIED => 'UNSPECIFIED',
        self::TOO_MANY_FREE_ACCOUNTS_FOR_PHONE_NUMBER => 'TOO_MANY_FREE_ACCOUNTS_FOR_PHONE_NUMBER',
        self::TOO_MANY_FREE_ACCOUNTS_FOR_DEVICE => 'TOO_MANY_FREE_ACCOUNTS_FOR_DEVICE',
        self::UNSUPPORTED_COUNTRY => 'UNSUPPORTED_COUNTRY',
        self::UNSUPPORTED_DEVICE => 'UNSUPPORTED_DEVICE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Code::class, \Code\Transaction\V2\DeniedErrorDetails_Code::class);

