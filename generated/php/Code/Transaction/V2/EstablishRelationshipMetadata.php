<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction/v2/transaction_service.proto

namespace Code\Transaction\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Establishes a long-lived private relationship between a user and another
 * entity.
 * Prereqs:
 *  - OpenAccounts intent has been submitted
 * Action spec:
 * actions = [OpenAccountAction(RELATIONSHIP)]
 *
 * Generated from protobuf message <code>code.transaction.v2.EstablishRelationshipMetadata</code>
 */
class EstablishRelationshipMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.code.common.v1.Relationship relationship = 1 [(.validate.rules) = {</code>
     */
    protected $relationship = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Code\Common\V1\Relationship $relationship
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Transaction\V2\TransactionService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.code.common.v1.Relationship relationship = 1 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\Relationship|null
     */
    public function getRelationship()
    {
        return $this->relationship;
    }

    public function hasRelationship()
    {
        return isset($this->relationship);
    }

    public function clearRelationship()
    {
        unset($this->relationship);
    }

    /**
     * Generated from protobuf field <code>.code.common.v1.Relationship relationship = 1 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\Relationship $var
     * @return $this
     */
    public function setRelationship($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\Relationship::class);
        $this->relationship = $var;

        return $this;
    }

}

