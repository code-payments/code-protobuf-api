<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction/v2/transaction_service.proto

namespace Code\Transaction\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>code.transaction.v2.TemporaryPrivacyTransferServerParameter</code>
 */
class TemporaryPrivacyTransferServerParameter extends \Google\Protobuf\Internal\Message
{
    /**
     * The treasury that will be used to split payments and provide a level of privacy
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId treasury = 1 [(.validate.rules) = {</code>
     */
    protected $treasury = null;
    /**
     * A recent root server observed from the treasury
     *
     * Generated from protobuf field <code>.code.common.v1.Hash recent_root = 2 [(.validate.rules) = {</code>
     */
    protected $recent_root = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Code\Common\V1\SolanaAccountId $treasury
     *           The treasury that will be used to split payments and provide a level of privacy
     *     @type \Code\Common\V1\Hash $recent_root
     *           A recent root server observed from the treasury
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Transaction\V2\TransactionService::initOnce();
        parent::__construct($data);
    }

    /**
     * The treasury that will be used to split payments and provide a level of privacy
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId treasury = 1 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\SolanaAccountId|null
     */
    public function getTreasury()
    {
        return $this->treasury;
    }

    public function hasTreasury()
    {
        return isset($this->treasury);
    }

    public function clearTreasury()
    {
        unset($this->treasury);
    }

    /**
     * The treasury that will be used to split payments and provide a level of privacy
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId treasury = 1 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\SolanaAccountId $var
     * @return $this
     */
    public function setTreasury($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\SolanaAccountId::class);
        $this->treasury = $var;

        return $this;
    }

    /**
     * A recent root server observed from the treasury
     *
     * Generated from protobuf field <code>.code.common.v1.Hash recent_root = 2 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\Hash|null
     */
    public function getRecentRoot()
    {
        return $this->recent_root;
    }

    public function hasRecentRoot()
    {
        return isset($this->recent_root);
    }

    public function clearRecentRoot()
    {
        unset($this->recent_root);
    }

    /**
     * A recent root server observed from the treasury
     *
     * Generated from protobuf field <code>.code.common.v1.Hash recent_root = 2 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\Hash $var
     * @return $this
     */
    public function setRecentRoot($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\Hash::class);
        $this->recent_root = $var;

        return $this;
    }

}

