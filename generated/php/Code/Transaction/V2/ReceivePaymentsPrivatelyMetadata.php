<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction/v2/transaction_service.proto

namespace Code\Transaction\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Receive funds into an organizer with initial temporary privacy. Clients should
 * also reorganize their bucket accounts and rotate their temporary incoming account
 * as applicable. Only accounts owned and derived by a user's 12 words should operate
 * as a source in this intent type to guarantee privacy upgradeability.
 * Action Spec (Payment):
 * actions = [
 *   // Section 1: Transfer Quarks from TEMPORARY_INCOMING account to BUCKET_X_KIN accounts with reorganizations
 *   TemporaryPrivacyTransferAction(TEMPORARY_INCOMING[index], BUCKET_X_KIN, multiple * bucketSize),
 *   TemporaryPrivacyExchangeAction(BUCKET_X_KIN, BUCKET_X_KIN, multiple * bucketSize),
 *   ...,
 *   TemporaryPrivacyTransferAction(TEMPORARY_INCOMING[index], BUCKET_X_KIN, multiple * bucketSize),
 *   TemporaryPrivacyExchangeAction(BUCKET_X_KIN, BUCKET_X_KIN, multiple * bucketSize),
 *   // Section 2: Rotate TEMPORARY_INCOMING account
 *   // Below must appear last in this exact order
 *   CloseEmptyAccountAction(TEMPORARY_INCOMING[index]),
 *   OpenAccountAction(TEMPORARY_INCOMING[index + 1])
 *   CloseDormantAccount(TEMPORARY_INCOMING[index + 1]),
 * ]
 * Action Spec (Deposit):
 * source = PRIMARY or RELATIONSHIP
 * actions = [
 *   TemporaryPrivacyTransferAction(source, BUCKET_X_KIN, multiple * bucketSize),
 *   TemporaryPrivacyExchangeAction(BUCKET_X_KIN, BUCKET_X_KIN, multiple * bucketSize),
 *   ...,
 *   TemporaryPrivacyTransferAction(source, BUCKET_X_KIN, multiple * bucketSize),
 *   TemporaryPrivacyExchangeAction(BUCKET_X_KIN, BUCKET_X_KIN, multiple * bucketSize),
 * ]
 *
 * Generated from protobuf message <code>code.transaction.v2.ReceivePaymentsPrivatelyMetadata</code>
 */
class ReceivePaymentsPrivatelyMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * The temporary incoming, primary or relationship account to receive funds from
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId source = 1 [(.validate.rules) = {</code>
     */
    protected $source = null;
    /**
     * The exact amount of Kin in quarks being received
     *
     * Generated from protobuf field <code>uint64 quarks = 2 [(.validate.rules) = {</code>
     */
    protected $quarks = 0;
    /**
     * Is the receipt of funds from a deposit? If true, the source account must
     * be a primary or relationship account. Otherwise, it must be from a temporary
     * incoming account.
     *
     * Generated from protobuf field <code>bool is_deposit = 3;</code>
     */
    protected $is_deposit = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Code\Common\V1\SolanaAccountId $source
     *           The temporary incoming, primary or relationship account to receive funds from
     *     @type int|string $quarks
     *           The exact amount of Kin in quarks being received
     *     @type bool $is_deposit
     *           Is the receipt of funds from a deposit? If true, the source account must
     *           be a primary or relationship account. Otherwise, it must be from a temporary
     *           incoming account.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Transaction\V2\TransactionService::initOnce();
        parent::__construct($data);
    }

    /**
     * The temporary incoming, primary or relationship account to receive funds from
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId source = 1 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\SolanaAccountId|null
     */
    public function getSource()
    {
        return $this->source;
    }

    public function hasSource()
    {
        return isset($this->source);
    }

    public function clearSource()
    {
        unset($this->source);
    }

    /**
     * The temporary incoming, primary or relationship account to receive funds from
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId source = 1 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\SolanaAccountId $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\SolanaAccountId::class);
        $this->source = $var;

        return $this;
    }

    /**
     * The exact amount of Kin in quarks being received
     *
     * Generated from protobuf field <code>uint64 quarks = 2 [(.validate.rules) = {</code>
     * @return int|string
     */
    public function getQuarks()
    {
        return $this->quarks;
    }

    /**
     * The exact amount of Kin in quarks being received
     *
     * Generated from protobuf field <code>uint64 quarks = 2 [(.validate.rules) = {</code>
     * @param int|string $var
     * @return $this
     */
    public function setQuarks($var)
    {
        GPBUtil::checkUint64($var);
        $this->quarks = $var;

        return $this;
    }

    /**
     * Is the receipt of funds from a deposit? If true, the source account must
     * be a primary or relationship account. Otherwise, it must be from a temporary
     * incoming account.
     *
     * Generated from protobuf field <code>bool is_deposit = 3;</code>
     * @return bool
     */
    public function getIsDeposit()
    {
        return $this->is_deposit;
    }

    /**
     * Is the receipt of funds from a deposit? If true, the source account must
     * be a primary or relationship account. Otherwise, it must be from a temporary
     * incoming account.
     *
     * Generated from protobuf field <code>bool is_deposit = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsDeposit($var)
    {
        GPBUtil::checkBool($var);
        $this->is_deposit = $var;

        return $this;
    }

}

