<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: user/v1/identity_service.proto

namespace Code\User\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>code.user.v1.UpdatePreferencesRequest</code>
 */
class UpdatePreferencesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The public key of the owner account that signed this request message.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner_account_id = 1 [(.validate.rules) = {</code>
     */
    protected $owner_account_id = null;
    /**
     * The data container for the copy of the contact list being added to.
     *
     * Generated from protobuf field <code>.code.common.v1.DataContainerId container_id = 2 [(.validate.rules) = {</code>
     */
    protected $container_id = null;
    /**
     * The signature is of serialize(UpdatePreferencesRequest) without this field set
     * using the private key of owner_account_id.
     *
     * Generated from protobuf field <code>.code.common.v1.Signature signature = 3 [(.validate.rules) = {</code>
     */
    protected $signature = null;
    /**
     * The user's locale, which is used for server-side localization of things like
     * chat messages, pushes, etc. If no locale is set, or the provided locale isn't
     * supported, then English is used as the default fallback.
     * Note: This is required since it's the only preference. In the future, we'll add
     *       optional fields, where the subset of fields provided will be the ones that
     *       are updated.
     *
     * Generated from protobuf field <code>.code.common.v1.Locale locale = 4 [(.validate.rules) = {</code>
     */
    protected $locale = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Code\Common\V1\SolanaAccountId $owner_account_id
     *           The public key of the owner account that signed this request message.
     *     @type \Code\Common\V1\DataContainerId $container_id
     *           The data container for the copy of the contact list being added to.
     *     @type \Code\Common\V1\Signature $signature
     *           The signature is of serialize(UpdatePreferencesRequest) without this field set
     *           using the private key of owner_account_id.
     *     @type \Code\Common\V1\Locale $locale
     *           The user's locale, which is used for server-side localization of things like
     *           chat messages, pushes, etc. If no locale is set, or the provided locale isn't
     *           supported, then English is used as the default fallback.
     *           Note: This is required since it's the only preference. In the future, we'll add
     *                 optional fields, where the subset of fields provided will be the ones that
     *                 are updated.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\User\V1\IdentityService::initOnce();
        parent::__construct($data);
    }

    /**
     * The public key of the owner account that signed this request message.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner_account_id = 1 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\SolanaAccountId|null
     */
    public function getOwnerAccountId()
    {
        return $this->owner_account_id;
    }

    public function hasOwnerAccountId()
    {
        return isset($this->owner_account_id);
    }

    public function clearOwnerAccountId()
    {
        unset($this->owner_account_id);
    }

    /**
     * The public key of the owner account that signed this request message.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner_account_id = 1 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\SolanaAccountId $var
     * @return $this
     */
    public function setOwnerAccountId($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\SolanaAccountId::class);
        $this->owner_account_id = $var;

        return $this;
    }

    /**
     * The data container for the copy of the contact list being added to.
     *
     * Generated from protobuf field <code>.code.common.v1.DataContainerId container_id = 2 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\DataContainerId|null
     */
    public function getContainerId()
    {
        return $this->container_id;
    }

    public function hasContainerId()
    {
        return isset($this->container_id);
    }

    public function clearContainerId()
    {
        unset($this->container_id);
    }

    /**
     * The data container for the copy of the contact list being added to.
     *
     * Generated from protobuf field <code>.code.common.v1.DataContainerId container_id = 2 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\DataContainerId $var
     * @return $this
     */
    public function setContainerId($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\DataContainerId::class);
        $this->container_id = $var;

        return $this;
    }

    /**
     * The signature is of serialize(UpdatePreferencesRequest) without this field set
     * using the private key of owner_account_id.
     *
     * Generated from protobuf field <code>.code.common.v1.Signature signature = 3 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\Signature|null
     */
    public function getSignature()
    {
        return $this->signature;
    }

    public function hasSignature()
    {
        return isset($this->signature);
    }

    public function clearSignature()
    {
        unset($this->signature);
    }

    /**
     * The signature is of serialize(UpdatePreferencesRequest) without this field set
     * using the private key of owner_account_id.
     *
     * Generated from protobuf field <code>.code.common.v1.Signature signature = 3 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\Signature $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\Signature::class);
        $this->signature = $var;

        return $this;
    }

    /**
     * The user's locale, which is used for server-side localization of things like
     * chat messages, pushes, etc. If no locale is set, or the provided locale isn't
     * supported, then English is used as the default fallback.
     * Note: This is required since it's the only preference. In the future, we'll add
     *       optional fields, where the subset of fields provided will be the ones that
     *       are updated.
     *
     * Generated from protobuf field <code>.code.common.v1.Locale locale = 4 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\Locale|null
     */
    public function getLocale()
    {
        return $this->locale;
    }

    public function hasLocale()
    {
        return isset($this->locale);
    }

    public function clearLocale()
    {
        unset($this->locale);
    }

    /**
     * The user's locale, which is used for server-side localization of things like
     * chat messages, pushes, etc. If no locale is set, or the provided locale isn't
     * supported, then English is used as the default fallback.
     * Note: This is required since it's the only preference. In the future, we'll add
     *       optional fields, where the subset of fields provided will be the ones that
     *       are updated.
     *
     * Generated from protobuf field <code>.code.common.v1.Locale locale = 4 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\Locale $var
     * @return $this
     */
    public function setLocale($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\Locale::class);
        $this->locale = $var;

        return $this;
    }

}

