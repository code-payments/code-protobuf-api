<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: user/v1/identity_service.proto

namespace Code\User\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>code.user.v1.GetUserResponse</code>
 */
class GetUserResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.code.user.v1.GetUserResponse.Result result = 1;</code>
     */
    protected $result = 0;
    /**
     * The user associated with the identifier
     *
     * Generated from protobuf field <code>.code.user.v1.User user = 2;</code>
     */
    protected $user = null;
    /**
     * The data container where the user can store a copy of their data
     *
     * Generated from protobuf field <code>.code.common.v1.DataContainerId data_container_id = 3;</code>
     */
    protected $data_container_id = null;
    /**
     * Whether client internal flags are enabled for this user
     *
     * Generated from protobuf field <code>bool enable_internal_flags = 6;</code>
     */
    protected $enable_internal_flags = false;
    /**
     * Set of which airdrops the user is eligible to receive
     *
     * Generated from protobuf field <code>repeated .code.transaction.v2.AirdropType eligible_airdrops = 7;</code>
     */
    private $eligible_airdrops;
    /**
     * Wether the buy module is enabled for this user
     *
     * Generated from protobuf field <code>bool enable_buy_module = 8;</code>
     */
    protected $enable_buy_module = false;
    protected $metadata;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $result
     *     @type \Code\User\V1\User $user
     *           The user associated with the identifier
     *     @type \Code\Common\V1\DataContainerId $data_container_id
     *           The data container where the user can store a copy of their data
     *     @type \Code\User\V1\PhoneMetadata $phone
     *           Metadata that corresponds to a phone-based identifying feature.
     *     @type bool $enable_internal_flags
     *           Whether client internal flags are enabled for this user
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $eligible_airdrops
     *           Set of which airdrops the user is eligible to receive
     *     @type bool $enable_buy_module
     *           Wether the buy module is enabled for this user
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\User\V1\IdentityService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.code.user.v1.GetUserResponse.Result result = 1;</code>
     * @return int
     */
    public function getResult()
    {
        return $this->result;
    }

    /**
     * Generated from protobuf field <code>.code.user.v1.GetUserResponse.Result result = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setResult($var)
    {
        GPBUtil::checkEnum($var, \Code\User\V1\GetUserResponse\Result::class);
        $this->result = $var;

        return $this;
    }

    /**
     * The user associated with the identifier
     *
     * Generated from protobuf field <code>.code.user.v1.User user = 2;</code>
     * @return \Code\User\V1\User|null
     */
    public function getUser()
    {
        return $this->user;
    }

    public function hasUser()
    {
        return isset($this->user);
    }

    public function clearUser()
    {
        unset($this->user);
    }

    /**
     * The user associated with the identifier
     *
     * Generated from protobuf field <code>.code.user.v1.User user = 2;</code>
     * @param \Code\User\V1\User $var
     * @return $this
     */
    public function setUser($var)
    {
        GPBUtil::checkMessage($var, \Code\User\V1\User::class);
        $this->user = $var;

        return $this;
    }

    /**
     * The data container where the user can store a copy of their data
     *
     * Generated from protobuf field <code>.code.common.v1.DataContainerId data_container_id = 3;</code>
     * @return \Code\Common\V1\DataContainerId|null
     */
    public function getDataContainerId()
    {
        return $this->data_container_id;
    }

    public function hasDataContainerId()
    {
        return isset($this->data_container_id);
    }

    public function clearDataContainerId()
    {
        unset($this->data_container_id);
    }

    /**
     * The data container where the user can store a copy of their data
     *
     * Generated from protobuf field <code>.code.common.v1.DataContainerId data_container_id = 3;</code>
     * @param \Code\Common\V1\DataContainerId $var
     * @return $this
     */
    public function setDataContainerId($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\DataContainerId::class);
        $this->data_container_id = $var;

        return $this;
    }

    /**
     * Metadata that corresponds to a phone-based identifying feature.
     *
     * Generated from protobuf field <code>.code.user.v1.PhoneMetadata phone = 5 [(.validate.rules) = {</code>
     * @return \Code\User\V1\PhoneMetadata|null
     */
    public function getPhone()
    {
        return $this->readOneof(5);
    }

    public function hasPhone()
    {
        return $this->hasOneof(5);
    }

    /**
     * Metadata that corresponds to a phone-based identifying feature.
     *
     * Generated from protobuf field <code>.code.user.v1.PhoneMetadata phone = 5 [(.validate.rules) = {</code>
     * @param \Code\User\V1\PhoneMetadata $var
     * @return $this
     */
    public function setPhone($var)
    {
        GPBUtil::checkMessage($var, \Code\User\V1\PhoneMetadata::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Whether client internal flags are enabled for this user
     *
     * Generated from protobuf field <code>bool enable_internal_flags = 6;</code>
     * @return bool
     */
    public function getEnableInternalFlags()
    {
        return $this->enable_internal_flags;
    }

    /**
     * Whether client internal flags are enabled for this user
     *
     * Generated from protobuf field <code>bool enable_internal_flags = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableInternalFlags($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_internal_flags = $var;

        return $this;
    }

    /**
     * Set of which airdrops the user is eligible to receive
     *
     * Generated from protobuf field <code>repeated .code.transaction.v2.AirdropType eligible_airdrops = 7;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEligibleAirdrops()
    {
        return $this->eligible_airdrops;
    }

    /**
     * Set of which airdrops the user is eligible to receive
     *
     * Generated from protobuf field <code>repeated .code.transaction.v2.AirdropType eligible_airdrops = 7;</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEligibleAirdrops($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Code\Transaction\V2\AirdropType::class);
        $this->eligible_airdrops = $arr;

        return $this;
    }

    /**
     * Wether the buy module is enabled for this user
     *
     * Generated from protobuf field <code>bool enable_buy_module = 8;</code>
     * @return bool
     */
    public function getEnableBuyModule()
    {
        return $this->enable_buy_module;
    }

    /**
     * Wether the buy module is enabled for this user
     *
     * Generated from protobuf field <code>bool enable_buy_module = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableBuyModule($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_buy_module = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getMetadata()
    {
        return $this->whichOneof("metadata");
    }

}

