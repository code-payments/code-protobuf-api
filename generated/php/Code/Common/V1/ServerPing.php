<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/v1/model.proto

namespace Code\Common\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>code.common.v1.ServerPing</code>
 */
class ServerPing extends \Google\Protobuf\Internal\Message
{
    /**
     * Timestamp the ping was sent on the stream, for client to get a sense
     * of potential network latency
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 1 [(.validate.rules) = {</code>
     */
    protected $timestamp = null;
    /**
     * The delay server will apply before sending the next ping
     *
     * Generated from protobuf field <code>.google.protobuf.Duration ping_delay = 2 [(.validate.rules) = {</code>
     */
    protected $ping_delay = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Timestamp $timestamp
     *           Timestamp the ping was sent on the stream, for client to get a sense
     *           of potential network latency
     *     @type \Google\Protobuf\Duration $ping_delay
     *           The delay server will apply before sending the next ping
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\V1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * Timestamp the ping was sent on the stream, for client to get a sense
     * of potential network latency
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 1 [(.validate.rules) = {</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }

    public function hasTimestamp()
    {
        return isset($this->timestamp);
    }

    public function clearTimestamp()
    {
        unset($this->timestamp);
    }

    /**
     * Timestamp the ping was sent on the stream, for client to get a sense
     * of potential network latency
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 1 [(.validate.rules) = {</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->timestamp = $var;

        return $this;
    }

    /**
     * The delay server will apply before sending the next ping
     *
     * Generated from protobuf field <code>.google.protobuf.Duration ping_delay = 2 [(.validate.rules) = {</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getPingDelay()
    {
        return $this->ping_delay;
    }

    public function hasPingDelay()
    {
        return isset($this->ping_delay);
    }

    public function clearPingDelay()
    {
        unset($this->ping_delay);
    }

    /**
     * The delay server will apply before sending the next ping
     *
     * Generated from protobuf field <code>.google.protobuf.Duration ping_delay = 2 [(.validate.rules) = {</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setPingDelay($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->ping_delay = $var;

        return $this;
    }

}

