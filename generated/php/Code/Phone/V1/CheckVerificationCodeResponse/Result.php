<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: phone/v1/phone_verification_service.proto

namespace Code\Phone\V1\CheckVerificationCodeResponse;

use UnexpectedValueException;

/**
 * Protobuf type <code>code.phone.v1.CheckVerificationCodeResponse.Result</code>
 */
class Result
{
    /**
     * Generated from protobuf enum <code>OK = 0;</code>
     */
    const OK = 0;
    /**
     * The provided verification code is invalid. The user may retry
     * enterring the code if this is received. When max attempts are
     * received, NO_VERIFICATION will be returned.
     *
     * Generated from protobuf enum <code>INVALID_CODE = 1;</code>
     */
    const INVALID_CODE = 1;
    /**
     * There is no verification in progress for the phone number. Several
     * reasons this can occur include a verification being expired or having
     * reached a maximum check threshold. The client must initiate a new
     * verification using SendVerificationCode.
     *
     * Generated from protobuf enum <code>NO_VERIFICATION = 2;</code>
     */
    const NO_VERIFICATION = 2;
    /**
     * The call is rate limited (eg. by IP, phone number, etc). The code is
     * not verified.
     *
     * Generated from protobuf enum <code>RATE_LIMITED = 3;</code>
     */
    const RATE_LIMITED = 3;

    private static $valueToName = [
        self::OK => 'OK',
        self::INVALID_CODE => 'INVALID_CODE',
        self::NO_VERIFICATION => 'NO_VERIFICATION',
        self::RATE_LIMITED => 'RATE_LIMITED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Result::class, \Code\Phone\V1\CheckVerificationCodeResponse_Result::class);

