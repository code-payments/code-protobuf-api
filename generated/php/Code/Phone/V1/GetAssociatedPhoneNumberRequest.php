<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: phone/v1/phone_verification_service.proto

namespace Code\Phone\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>code.phone.v1.GetAssociatedPhoneNumberRequest</code>
 */
class GetAssociatedPhoneNumberRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The public key of the owner account that is being queried for a linked
     * phone number.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner_account_id = 1 [(.validate.rules) = {</code>
     */
    protected $owner_account_id = null;
    /**
     * The signature is of serialize(GetAssociatedPhoneNumberRequest) without
     * this field set using the private key of owner_account_id. This provides
     * an authentication mechanism to the RPC.
     *
     * Generated from protobuf field <code>.code.common.v1.Signature signature = 2 [(.validate.rules) = {</code>
     */
    protected $signature = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Code\Common\V1\SolanaAccountId $owner_account_id
     *           The public key of the owner account that is being queried for a linked
     *           phone number.
     *     @type \Code\Common\V1\Signature $signature
     *           The signature is of serialize(GetAssociatedPhoneNumberRequest) without
     *           this field set using the private key of owner_account_id. This provides
     *           an authentication mechanism to the RPC.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Phone\V1\PhoneVerificationService::initOnce();
        parent::__construct($data);
    }

    /**
     * The public key of the owner account that is being queried for a linked
     * phone number.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner_account_id = 1 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\SolanaAccountId|null
     */
    public function getOwnerAccountId()
    {
        return $this->owner_account_id;
    }

    public function hasOwnerAccountId()
    {
        return isset($this->owner_account_id);
    }

    public function clearOwnerAccountId()
    {
        unset($this->owner_account_id);
    }

    /**
     * The public key of the owner account that is being queried for a linked
     * phone number.
     *
     * Generated from protobuf field <code>.code.common.v1.SolanaAccountId owner_account_id = 1 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\SolanaAccountId $var
     * @return $this
     */
    public function setOwnerAccountId($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\SolanaAccountId::class);
        $this->owner_account_id = $var;

        return $this;
    }

    /**
     * The signature is of serialize(GetAssociatedPhoneNumberRequest) without
     * this field set using the private key of owner_account_id. This provides
     * an authentication mechanism to the RPC.
     *
     * Generated from protobuf field <code>.code.common.v1.Signature signature = 2 [(.validate.rules) = {</code>
     * @return \Code\Common\V1\Signature|null
     */
    public function getSignature()
    {
        return $this->signature;
    }

    public function hasSignature()
    {
        return isset($this->signature);
    }

    public function clearSignature()
    {
        unset($this->signature);
    }

    /**
     * The signature is of serialize(GetAssociatedPhoneNumberRequest) without
     * this field set using the private key of owner_account_id. This provides
     * an authentication mechanism to the RPC.
     *
     * Generated from protobuf field <code>.code.common.v1.Signature signature = 2 [(.validate.rules) = {</code>
     * @param \Code\Common\V1\Signature $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkMessage($var, \Code\Common\V1\Signature::class);
        $this->signature = $var;

        return $this;
    }

}

