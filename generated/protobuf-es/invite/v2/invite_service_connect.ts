// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file invite/v2/invite_service.proto (package code.invite.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetInvitationStatusRequest, GetInvitationStatusResponse, GetInviteCountRequest, GetInviteCountResponse, InvitePhoneNumberRequest, InvitePhoneNumberResponse } from "./invite_service_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service code.invite.v2.Invite
 */
export const Invite = {
  typeName: "code.invite.v2.Invite",
  methods: {
    /**
     * GetInviteCount gets the number of invites that a user can send out.
     *
     * @generated from rpc code.invite.v2.Invite.GetInviteCount
     */
    getInviteCount: {
      name: "GetInviteCount",
      I: GetInviteCountRequest,
      O: GetInviteCountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * InvitePhoneNumber invites someone to join via their phone number. A phone number
     * can only be invited once by a unique user or invite code. This is to avoid having
     * a phone number consuming more than one invite count globally.
     *
     * @generated from rpc code.invite.v2.Invite.InvitePhoneNumber
     */
    invitePhoneNumber: {
      name: "InvitePhoneNumber",
      I: InvitePhoneNumberRequest,
      O: InvitePhoneNumberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetInvitationStatus gets a phone number's invitation status.
     *
     * @generated from rpc code.invite.v2.Invite.GetInvitationStatus
     */
    getInvitationStatus: {
      name: "GetInvitationStatus",
      I: GetInvitationStatusRequest,
      O: GetInvitationStatusResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

