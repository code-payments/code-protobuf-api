// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file device/v1/device_service.proto (package code.device.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetLoggedInAccountsRequest, GetLoggedInAccountsResponse, RegisterLoggedInAccountsRequest, RegisterLoggedInAccountsResponse } from "./device_service_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service code.device.v1.Device
 */
export const Device = {
  typeName: "code.device.v1.Device",
  methods: {
    /**
     * RegisterLoggedInAccounts registers a set of owner accounts logged for
     * an app install. Currently, a single login is enforced per app install.
     * After using GetLoggedInAccounts to detect stale logins, clients can use
     * this RPC to update the set of accounts with valid login sessions.
     *
     * @generated from rpc code.device.v1.Device.RegisterLoggedInAccounts
     */
    registerLoggedInAccounts: {
      name: "RegisterLoggedInAccounts",
      I: RegisterLoggedInAccountsRequest,
      O: RegisterLoggedInAccountsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetLoggedInAccounts gets the set of logged in accounts for an app install.
     * Clients can use this RPC to detect stale logins for boot out of the app.
     *
     * @generated from rpc code.device.v1.Device.GetLoggedInAccounts
     */
    getLoggedInAccounts: {
      name: "GetLoggedInAccounts",
      I: GetLoggedInAccountsRequest,
      O: GetLoggedInAccountsResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

