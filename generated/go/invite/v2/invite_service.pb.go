// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: invite/v2/invite_service.proto

package invite

import (
	v1 "github.com/code-payments/code-protobuf-api/generated/go/common/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InvitationStatus int32

const (
	// The phone number has never been invited.
	InvitationStatus_NOT_INVITED InvitationStatus = 0
	// The phone number has been invited at least once.
	InvitationStatus_INVITED InvitationStatus = 1
	// The phone number has been invited and used the app at least once via a
	// phone verified account creation or login.
	InvitationStatus_REGISTERED InvitationStatus = 2
	// The phone number was invited, but revoked at a later time.
	InvitationStatus_REVOKED InvitationStatus = 3
)

// Enum value maps for InvitationStatus.
var (
	InvitationStatus_name = map[int32]string{
		0: "NOT_INVITED",
		1: "INVITED",
		2: "REGISTERED",
		3: "REVOKED",
	}
	InvitationStatus_value = map[string]int32{
		"NOT_INVITED": 0,
		"INVITED":     1,
		"REGISTERED":  2,
		"REVOKED":     3,
	}
)

func (x InvitationStatus) Enum() *InvitationStatus {
	p := new(InvitationStatus)
	*p = x
	return p
}

func (x InvitationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvitationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_invite_v2_invite_service_proto_enumTypes[0].Descriptor()
}

func (InvitationStatus) Type() protoreflect.EnumType {
	return &file_invite_v2_invite_service_proto_enumTypes[0]
}

func (x InvitationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvitationStatus.Descriptor instead.
func (InvitationStatus) EnumDescriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{0}
}

type GetInviteCountResponse_Result int32

const (
	GetInviteCountResponse_OK GetInviteCountResponse_Result = 0
)

// Enum value maps for GetInviteCountResponse_Result.
var (
	GetInviteCountResponse_Result_name = map[int32]string{
		0: "OK",
	}
	GetInviteCountResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x GetInviteCountResponse_Result) Enum() *GetInviteCountResponse_Result {
	p := new(GetInviteCountResponse_Result)
	*p = x
	return p
}

func (x GetInviteCountResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetInviteCountResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_invite_v2_invite_service_proto_enumTypes[1].Descriptor()
}

func (GetInviteCountResponse_Result) Type() protoreflect.EnumType {
	return &file_invite_v2_invite_service_proto_enumTypes[1]
}

func (x GetInviteCountResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetInviteCountResponse_Result.Descriptor instead.
func (GetInviteCountResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{1, 0}
}

type InvitePhoneNumberResponse_Result int32

const (
	InvitePhoneNumberResponse_OK InvitePhoneNumberResponse_Result = 0
	// The source exceeded their invite count and is restricted from issuing
	// further invites.
	InvitePhoneNumberResponse_INVITE_COUNT_EXCEEDED InvitePhoneNumberResponse_Result = 1
	// The receiver phone number has already been invited. Regardless of who
	// invited it, the source's invite count is not decremented when this is
	// returned.
	InvitePhoneNumberResponse_ALREADY_INVITED InvitePhoneNumberResponse_Result = 2
	// The source  user has not been invited.
	InvitePhoneNumberResponse_USER_NOT_INVITED InvitePhoneNumberResponse_Result = 3
	// The receiver phone number failed validation.
	InvitePhoneNumberResponse_INVALID_RECEIVER_PHONE_NUMBER InvitePhoneNumberResponse_Result = 4
	// The invite code doesn't exist.
	InvitePhoneNumberResponse_INVITE_CODE_NOT_FOUND InvitePhoneNumberResponse_Result = 5
	// The invite code has been revoked.
	InvitePhoneNumberResponse_INVITE_CODE_REVOKED InvitePhoneNumberResponse_Result = 6
	// The invite code has expired.
	InvitePhoneNumberResponse_INVITE_CODE_EXPIRED InvitePhoneNumberResponse_Result = 7
)

// Enum value maps for InvitePhoneNumberResponse_Result.
var (
	InvitePhoneNumberResponse_Result_name = map[int32]string{
		0: "OK",
		1: "INVITE_COUNT_EXCEEDED",
		2: "ALREADY_INVITED",
		3: "USER_NOT_INVITED",
		4: "INVALID_RECEIVER_PHONE_NUMBER",
		5: "INVITE_CODE_NOT_FOUND",
		6: "INVITE_CODE_REVOKED",
		7: "INVITE_CODE_EXPIRED",
	}
	InvitePhoneNumberResponse_Result_value = map[string]int32{
		"OK":                            0,
		"INVITE_COUNT_EXCEEDED":         1,
		"ALREADY_INVITED":               2,
		"USER_NOT_INVITED":              3,
		"INVALID_RECEIVER_PHONE_NUMBER": 4,
		"INVITE_CODE_NOT_FOUND":         5,
		"INVITE_CODE_REVOKED":           6,
		"INVITE_CODE_EXPIRED":           7,
	}
)

func (x InvitePhoneNumberResponse_Result) Enum() *InvitePhoneNumberResponse_Result {
	p := new(InvitePhoneNumberResponse_Result)
	*p = x
	return p
}

func (x InvitePhoneNumberResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvitePhoneNumberResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_invite_v2_invite_service_proto_enumTypes[2].Descriptor()
}

func (InvitePhoneNumberResponse_Result) Type() protoreflect.EnumType {
	return &file_invite_v2_invite_service_proto_enumTypes[2]
}

func (x InvitePhoneNumberResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvitePhoneNumberResponse_Result.Descriptor instead.
func (InvitePhoneNumberResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{3, 0}
}

type GetInvitationStatusResponse_Result int32

const (
	GetInvitationStatusResponse_OK GetInvitationStatusResponse_Result = 0
)

// Enum value maps for GetInvitationStatusResponse_Result.
var (
	GetInvitationStatusResponse_Result_name = map[int32]string{
		0: "OK",
	}
	GetInvitationStatusResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x GetInvitationStatusResponse_Result) Enum() *GetInvitationStatusResponse_Result {
	p := new(GetInvitationStatusResponse_Result)
	*p = x
	return p
}

func (x GetInvitationStatusResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetInvitationStatusResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_invite_v2_invite_service_proto_enumTypes[3].Descriptor()
}

func (GetInvitationStatusResponse_Result) Type() protoreflect.EnumType {
	return &file_invite_v2_invite_service_proto_enumTypes[3]
}

func (x GetInvitationStatusResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetInvitationStatusResponse_Result.Descriptor instead.
func (GetInvitationStatusResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{5, 0}
}

type GetInviteCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user to query for their invite count
	UserId *v1.UserId `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetInviteCountRequest) Reset() {
	*x = GetInviteCountRequest{}
	mi := &file_invite_v2_invite_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInviteCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInviteCountRequest) ProtoMessage() {}

func (x *GetInviteCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invite_v2_invite_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInviteCountRequest.ProtoReflect.Descriptor instead.
func (*GetInviteCountRequest) Descriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetInviteCountRequest) GetUserId() *v1.UserId {
	if x != nil {
		return x.UserId
	}
	return nil
}

type GetInviteCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetInviteCountResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.invite.v2.GetInviteCountResponse_Result" json:"result,omitempty"`
	// The number of invites the user is allowed to issue.
	InviteCount uint32 `protobuf:"varint,2,opt,name=invite_count,json=inviteCount,proto3" json:"invite_count,omitempty"`
}

func (x *GetInviteCountResponse) Reset() {
	*x = GetInviteCountResponse{}
	mi := &file_invite_v2_invite_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInviteCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInviteCountResponse) ProtoMessage() {}

func (x *GetInviteCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invite_v2_invite_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInviteCountResponse.ProtoReflect.Descriptor instead.
func (*GetInviteCountResponse) Descriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetInviteCountResponse) GetResult() GetInviteCountResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetInviteCountResponse_OK
}

func (x *GetInviteCountResponse) GetInviteCount() uint32 {
	if x != nil {
		return x.InviteCount
	}
	return 0
}

type InvitePhoneNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The source for the invite. One of these values must be present
	//
	// Types that are assignable to Source:
	//
	//	*InvitePhoneNumberRequest_User
	//	*InvitePhoneNumberRequest_InviteCode
	Source isInvitePhoneNumberRequest_Source `protobuf_oneof:"source"`
	// The phone number receiving the invite.
	Receiver *v1.PhoneNumber `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (x *InvitePhoneNumberRequest) Reset() {
	*x = InvitePhoneNumberRequest{}
	mi := &file_invite_v2_invite_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvitePhoneNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitePhoneNumberRequest) ProtoMessage() {}

func (x *InvitePhoneNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invite_v2_invite_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitePhoneNumberRequest.ProtoReflect.Descriptor instead.
func (*InvitePhoneNumberRequest) Descriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{2}
}

func (m *InvitePhoneNumberRequest) GetSource() isInvitePhoneNumberRequest_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *InvitePhoneNumberRequest) GetUser() *v1.UserId {
	if x, ok := x.GetSource().(*InvitePhoneNumberRequest_User); ok {
		return x.User
	}
	return nil
}

func (x *InvitePhoneNumberRequest) GetInviteCode() *InviteCode {
	if x, ok := x.GetSource().(*InvitePhoneNumberRequest_InviteCode); ok {
		return x.InviteCode
	}
	return nil
}

func (x *InvitePhoneNumberRequest) GetReceiver() *v1.PhoneNumber {
	if x != nil {
		return x.Receiver
	}
	return nil
}

type isInvitePhoneNumberRequest_Source interface {
	isInvitePhoneNumberRequest_Source()
}

type InvitePhoneNumberRequest_User struct {
	User *v1.UserId `protobuf:"bytes,1,opt,name=user,proto3,oneof"`
}

type InvitePhoneNumberRequest_InviteCode struct {
	InviteCode *InviteCode `protobuf:"bytes,3,opt,name=invite_code,json=inviteCode,proto3,oneof"`
}

func (*InvitePhoneNumberRequest_User) isInvitePhoneNumberRequest_Source() {}

func (*InvitePhoneNumberRequest_InviteCode) isInvitePhoneNumberRequest_Source() {}

type InvitePhoneNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result InvitePhoneNumberResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.invite.v2.InvitePhoneNumberResponse_Result" json:"result,omitempty"`
}

func (x *InvitePhoneNumberResponse) Reset() {
	*x = InvitePhoneNumberResponse{}
	mi := &file_invite_v2_invite_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvitePhoneNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitePhoneNumberResponse) ProtoMessage() {}

func (x *InvitePhoneNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invite_v2_invite_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitePhoneNumberResponse.ProtoReflect.Descriptor instead.
func (*InvitePhoneNumberResponse) Descriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{3}
}

func (x *InvitePhoneNumberResponse) GetResult() InvitePhoneNumberResponse_Result {
	if x != nil {
		return x.Result
	}
	return InvitePhoneNumberResponse_OK
}

type GetInvitationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user being queried for their invitation status.
	UserId *v1.UserId `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetInvitationStatusRequest) Reset() {
	*x = GetInvitationStatusRequest{}
	mi := &file_invite_v2_invite_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInvitationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvitationStatusRequest) ProtoMessage() {}

func (x *GetInvitationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invite_v2_invite_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvitationStatusRequest.ProtoReflect.Descriptor instead.
func (*GetInvitationStatusRequest) Descriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetInvitationStatusRequest) GetUserId() *v1.UserId {
	if x != nil {
		return x.UserId
	}
	return nil
}

type GetInvitationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetInvitationStatusResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.invite.v2.GetInvitationStatusResponse_Result" json:"result,omitempty"`
	// The user's invitation status
	Status InvitationStatus `protobuf:"varint,2,opt,name=status,proto3,enum=code.invite.v2.InvitationStatus" json:"status,omitempty"`
}

func (x *GetInvitationStatusResponse) Reset() {
	*x = GetInvitationStatusResponse{}
	mi := &file_invite_v2_invite_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInvitationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvitationStatusResponse) ProtoMessage() {}

func (x *GetInvitationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invite_v2_invite_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvitationStatusResponse.ProtoReflect.Descriptor instead.
func (*GetInvitationStatusResponse) Descriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetInvitationStatusResponse) GetResult() GetInvitationStatusResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetInvitationStatusResponse_OK
}

func (x *GetInvitationStatusResponse) GetStatus() InvitationStatus {
	if x != nil {
		return x.Status
	}
	return InvitationStatus_NOT_INVITED
}

type InviteCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Regex for invite codes
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *InviteCode) Reset() {
	*x = InviteCode{}
	mi := &file_invite_v2_invite_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteCode) ProtoMessage() {}

func (x *InviteCode) ProtoReflect() protoreflect.Message {
	mi := &file_invite_v2_invite_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteCode.ProtoReflect.Descriptor instead.
func (*InviteCode) Descriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{6}
}

func (x *InviteCode) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PageToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PageToken) Reset() {
	*x = PageToken{}
	mi := &file_invite_v2_invite_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageToken) ProtoMessage() {}

func (x *PageToken) ProtoReflect() protoreflect.Message {
	mi := &file_invite_v2_invite_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageToken.ProtoReflect.Descriptor instead.
func (*PageToken) Descriptor() ([]byte, []int) {
	return file_invite_v2_invite_service_proto_rawDescGZIP(), []int{7}
}

func (x *PageToken) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_invite_v2_invite_service_proto protoreflect.FileDescriptor

var file_invite_v2_invite_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32,
	0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x52, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22, 0xd4, 0x01, 0x0a, 0x18,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x48, 0x00,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x19, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x19, 0x0a,
	0x15, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x45, 0x58,
	0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x4c, 0x52, 0x45,
	0x41, 0x44, 0x59, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a,
	0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52,
	0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55,
	0x4d, 0x42, 0x45, 0x52, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x05, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x44, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e,
	0x56, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45,
	0x44, 0x10, 0x07, 0x22, 0x57, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x4b, 0x10, 0x00, 0x22, 0x3f, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1b, 0xfa, 0x42, 0x18, 0x72, 0x16, 0x10, 0x03, 0x18, 0x20, 0x32, 0x10, 0x5e, 0x5b,
	0x41, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x33, 0x2c, 0x33, 0x32, 0x7d, 0x24, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x7a, 0x05, 0x10, 0x01, 0x18, 0x80, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x2a, 0x4d, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f,
	0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56,
	0x49, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54,
	0x45, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45,
	0x44, 0x10, 0x03, 0x32, 0xc3, 0x02, 0x0a, 0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x5f,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x68, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x73, 0x0a, 0x19, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x69, 0x6e, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x3b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0xa2, 0x02, 0x0b, 0x43, 0x50, 0x42, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x56, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_invite_v2_invite_service_proto_rawDescOnce sync.Once
	file_invite_v2_invite_service_proto_rawDescData = file_invite_v2_invite_service_proto_rawDesc
)

func file_invite_v2_invite_service_proto_rawDescGZIP() []byte {
	file_invite_v2_invite_service_proto_rawDescOnce.Do(func() {
		file_invite_v2_invite_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_invite_v2_invite_service_proto_rawDescData)
	})
	return file_invite_v2_invite_service_proto_rawDescData
}

var file_invite_v2_invite_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_invite_v2_invite_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_invite_v2_invite_service_proto_goTypes = []any{
	(InvitationStatus)(0),                   // 0: code.invite.v2.InvitationStatus
	(GetInviteCountResponse_Result)(0),      // 1: code.invite.v2.GetInviteCountResponse.Result
	(InvitePhoneNumberResponse_Result)(0),   // 2: code.invite.v2.InvitePhoneNumberResponse.Result
	(GetInvitationStatusResponse_Result)(0), // 3: code.invite.v2.GetInvitationStatusResponse.Result
	(*GetInviteCountRequest)(nil),           // 4: code.invite.v2.GetInviteCountRequest
	(*GetInviteCountResponse)(nil),          // 5: code.invite.v2.GetInviteCountResponse
	(*InvitePhoneNumberRequest)(nil),        // 6: code.invite.v2.InvitePhoneNumberRequest
	(*InvitePhoneNumberResponse)(nil),       // 7: code.invite.v2.InvitePhoneNumberResponse
	(*GetInvitationStatusRequest)(nil),      // 8: code.invite.v2.GetInvitationStatusRequest
	(*GetInvitationStatusResponse)(nil),     // 9: code.invite.v2.GetInvitationStatusResponse
	(*InviteCode)(nil),                      // 10: code.invite.v2.InviteCode
	(*PageToken)(nil),                       // 11: code.invite.v2.PageToken
	(*v1.UserId)(nil),                       // 12: code.common.v1.UserId
	(*v1.PhoneNumber)(nil),                  // 13: code.common.v1.PhoneNumber
}
var file_invite_v2_invite_service_proto_depIdxs = []int32{
	12, // 0: code.invite.v2.GetInviteCountRequest.user_id:type_name -> code.common.v1.UserId
	1,  // 1: code.invite.v2.GetInviteCountResponse.result:type_name -> code.invite.v2.GetInviteCountResponse.Result
	12, // 2: code.invite.v2.InvitePhoneNumberRequest.user:type_name -> code.common.v1.UserId
	10, // 3: code.invite.v2.InvitePhoneNumberRequest.invite_code:type_name -> code.invite.v2.InviteCode
	13, // 4: code.invite.v2.InvitePhoneNumberRequest.receiver:type_name -> code.common.v1.PhoneNumber
	2,  // 5: code.invite.v2.InvitePhoneNumberResponse.result:type_name -> code.invite.v2.InvitePhoneNumberResponse.Result
	12, // 6: code.invite.v2.GetInvitationStatusRequest.user_id:type_name -> code.common.v1.UserId
	3,  // 7: code.invite.v2.GetInvitationStatusResponse.result:type_name -> code.invite.v2.GetInvitationStatusResponse.Result
	0,  // 8: code.invite.v2.GetInvitationStatusResponse.status:type_name -> code.invite.v2.InvitationStatus
	4,  // 9: code.invite.v2.Invite.GetInviteCount:input_type -> code.invite.v2.GetInviteCountRequest
	6,  // 10: code.invite.v2.Invite.InvitePhoneNumber:input_type -> code.invite.v2.InvitePhoneNumberRequest
	8,  // 11: code.invite.v2.Invite.GetInvitationStatus:input_type -> code.invite.v2.GetInvitationStatusRequest
	5,  // 12: code.invite.v2.Invite.GetInviteCount:output_type -> code.invite.v2.GetInviteCountResponse
	7,  // 13: code.invite.v2.Invite.InvitePhoneNumber:output_type -> code.invite.v2.InvitePhoneNumberResponse
	9,  // 14: code.invite.v2.Invite.GetInvitationStatus:output_type -> code.invite.v2.GetInvitationStatusResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_invite_v2_invite_service_proto_init() }
func file_invite_v2_invite_service_proto_init() {
	if File_invite_v2_invite_service_proto != nil {
		return
	}
	file_invite_v2_invite_service_proto_msgTypes[2].OneofWrappers = []any{
		(*InvitePhoneNumberRequest_User)(nil),
		(*InvitePhoneNumberRequest_InviteCode)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_invite_v2_invite_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_invite_v2_invite_service_proto_goTypes,
		DependencyIndexes: file_invite_v2_invite_service_proto_depIdxs,
		EnumInfos:         file_invite_v2_invite_service_proto_enumTypes,
		MessageInfos:      file_invite_v2_invite_service_proto_msgTypes,
	}.Build()
	File_invite_v2_invite_service_proto = out.File
	file_invite_v2_invite_service_proto_rawDesc = nil
	file_invite_v2_invite_service_proto_goTypes = nil
	file_invite_v2_invite_service_proto_depIdxs = nil
}
