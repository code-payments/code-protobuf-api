// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: contact/v1/contact_list_service.proto

package contact

import (
	v1 "github.com/code-payments/code-protobuf-api/generated/go/common/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddContactsResponse_Result int32

const (
	AddContactsResponse_OK AddContactsResponse_Result = 0
)

// Enum value maps for AddContactsResponse_Result.
var (
	AddContactsResponse_Result_name = map[int32]string{
		0: "OK",
	}
	AddContactsResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x AddContactsResponse_Result) Enum() *AddContactsResponse_Result {
	p := new(AddContactsResponse_Result)
	*p = x
	return p
}

func (x AddContactsResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddContactsResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_contact_v1_contact_list_service_proto_enumTypes[0].Descriptor()
}

func (AddContactsResponse_Result) Type() protoreflect.EnumType {
	return &file_contact_v1_contact_list_service_proto_enumTypes[0]
}

func (x AddContactsResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddContactsResponse_Result.Descriptor instead.
func (AddContactsResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{1, 0}
}

type RemoveContactsResponse_Result int32

const (
	RemoveContactsResponse_OK RemoveContactsResponse_Result = 0
)

// Enum value maps for RemoveContactsResponse_Result.
var (
	RemoveContactsResponse_Result_name = map[int32]string{
		0: "OK",
	}
	RemoveContactsResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x RemoveContactsResponse_Result) Enum() *RemoveContactsResponse_Result {
	p := new(RemoveContactsResponse_Result)
	*p = x
	return p
}

func (x RemoveContactsResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveContactsResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_contact_v1_contact_list_service_proto_enumTypes[1].Descriptor()
}

func (RemoveContactsResponse_Result) Type() protoreflect.EnumType {
	return &file_contact_v1_contact_list_service_proto_enumTypes[1]
}

func (x RemoveContactsResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveContactsResponse_Result.Descriptor instead.
func (RemoveContactsResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{3, 0}
}

type GetContactsResponse_Result int32

const (
	GetContactsResponse_OK GetContactsResponse_Result = 0
)

// Enum value maps for GetContactsResponse_Result.
var (
	GetContactsResponse_Result_name = map[int32]string{
		0: "OK",
	}
	GetContactsResponse_Result_value = map[string]int32{
		"OK": 0,
	}
)

func (x GetContactsResponse_Result) Enum() *GetContactsResponse_Result {
	p := new(GetContactsResponse_Result)
	*p = x
	return p
}

func (x GetContactsResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetContactsResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_contact_v1_contact_list_service_proto_enumTypes[2].Descriptor()
}

func (GetContactsResponse_Result) Type() protoreflect.EnumType {
	return &file_contact_v1_contact_list_service_proto_enumTypes[2]
}

func (x GetContactsResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetContactsResponse_Result.Descriptor instead.
func (GetContactsResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{5, 0}
}

type AddContactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The public key of the owner account that signed this request message.
	OwnerAccountId *v1.SolanaAccountId `protobuf:"bytes,1,opt,name=owner_account_id,json=ownerAccountId,proto3" json:"owner_account_id,omitempty"`
	// The signature is of serialize(AddContactsRequest) without this field set
	// using the private key of owner_account_id. This provides an authentication
	// mechanism to the RPC.
	Signature *v1.Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// The data container for the copy of the contact list being added to.
	ContainerId *v1.DataContainerId `protobuf:"bytes,3,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// The set of contacts to add to the contact list
	Contacts []*v1.PhoneNumber `protobuf:"bytes,4,rep,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *AddContactsRequest) Reset() {
	*x = AddContactsRequest{}
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactsRequest) ProtoMessage() {}

func (x *AddContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactsRequest.ProtoReflect.Descriptor instead.
func (*AddContactsRequest) Descriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddContactsRequest) GetOwnerAccountId() *v1.SolanaAccountId {
	if x != nil {
		return x.OwnerAccountId
	}
	return nil
}

func (x *AddContactsRequest) GetSignature() *v1.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *AddContactsRequest) GetContainerId() *v1.DataContainerId {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *AddContactsRequest) GetContacts() []*v1.PhoneNumber {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type AddContactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result AddContactsResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.contact.v1.AddContactsResponse_Result" json:"result,omitempty"`
	// The contacts' current status keyed by phone number. This is an optimization
	// so that clients can populate initial state without needing an extra network
	// call.
	ContactStatus map[string]*ContactStatus `protobuf:"bytes,2,rep,name=contact_status,json=contactStatus,proto3" json:"contact_status,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddContactsResponse) Reset() {
	*x = AddContactsResponse{}
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddContactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactsResponse) ProtoMessage() {}

func (x *AddContactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactsResponse.ProtoReflect.Descriptor instead.
func (*AddContactsResponse) Descriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddContactsResponse) GetResult() AddContactsResponse_Result {
	if x != nil {
		return x.Result
	}
	return AddContactsResponse_OK
}

func (x *AddContactsResponse) GetContactStatus() map[string]*ContactStatus {
	if x != nil {
		return x.ContactStatus
	}
	return nil
}

type RemoveContactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The public key of the owner account that signed this request message.
	OwnerAccountId *v1.SolanaAccountId `protobuf:"bytes,1,opt,name=owner_account_id,json=ownerAccountId,proto3" json:"owner_account_id,omitempty"`
	// The signature is of serialize(RemoveContactsRequest) without this field
	// set using the private key of owner_account_id. This provides an
	// authentication mechanism to the RPC.
	Signature *v1.Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// The data container for the copy of the contact list being removed from.
	ContainerId *v1.DataContainerId `protobuf:"bytes,3,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// The set of contacts to remove from the contact list
	Contacts []*v1.PhoneNumber `protobuf:"bytes,4,rep,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *RemoveContactsRequest) Reset() {
	*x = RemoveContactsRequest{}
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContactsRequest) ProtoMessage() {}

func (x *RemoveContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContactsRequest.ProtoReflect.Descriptor instead.
func (*RemoveContactsRequest) Descriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveContactsRequest) GetOwnerAccountId() *v1.SolanaAccountId {
	if x != nil {
		return x.OwnerAccountId
	}
	return nil
}

func (x *RemoveContactsRequest) GetSignature() *v1.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *RemoveContactsRequest) GetContainerId() *v1.DataContainerId {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *RemoveContactsRequest) GetContacts() []*v1.PhoneNumber {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type RemoveContactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result RemoveContactsResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.contact.v1.RemoveContactsResponse_Result" json:"result,omitempty"`
}

func (x *RemoveContactsResponse) Reset() {
	*x = RemoveContactsResponse{}
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveContactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContactsResponse) ProtoMessage() {}

func (x *RemoveContactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContactsResponse.ProtoReflect.Descriptor instead.
func (*RemoveContactsResponse) Descriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveContactsResponse) GetResult() RemoveContactsResponse_Result {
	if x != nil {
		return x.Result
	}
	return RemoveContactsResponse_OK
}

type GetContactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The public key of the owner account that signed this request message.
	OwnerAccountId *v1.SolanaAccountId `protobuf:"bytes,1,opt,name=owner_account_id,json=ownerAccountId,proto3" json:"owner_account_id,omitempty"`
	// The signature is of serialize(GetContactsRequest) without this field set
	// using the private key of owner_account_id. This provides an authentication
	// mechanism to the RPC.
	Signature *v1.Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// The data container for the copy of the contact list being fetched.
	ContainerId *v1.DataContainerId `protobuf:"bytes,3,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// The page token, which is retreived from a previous response, to get the next
	// set of contacts. The first page is returned when not set.
	PageToken *PageToken `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter out contacts that have an association with Code. This includes users
	// that have both been invited and registered with the app.
	IncludeOnlyInAppContacts bool `protobuf:"varint,5,opt,name=include_only_in_app_contacts,json=includeOnlyInAppContacts,proto3" json:"include_only_in_app_contacts,omitempty"`
}

func (x *GetContactsRequest) Reset() {
	*x = GetContactsRequest{}
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactsRequest) ProtoMessage() {}

func (x *GetContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactsRequest.ProtoReflect.Descriptor instead.
func (*GetContactsRequest) Descriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetContactsRequest) GetOwnerAccountId() *v1.SolanaAccountId {
	if x != nil {
		return x.OwnerAccountId
	}
	return nil
}

func (x *GetContactsRequest) GetSignature() *v1.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *GetContactsRequest) GetContainerId() *v1.DataContainerId {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *GetContactsRequest) GetPageToken() *PageToken {
	if x != nil {
		return x.PageToken
	}
	return nil
}

func (x *GetContactsRequest) GetIncludeOnlyInAppContacts() bool {
	if x != nil {
		return x.IncludeOnlyInAppContacts
	}
	return false
}

type GetContactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetContactsResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.contact.v1.GetContactsResponse_Result" json:"result,omitempty"`
	// A page of contacts
	Contacts []*Contact `protobuf:"bytes,2,rep,name=contacts,proto3" json:"contacts,omitempty"`
	// The page token to include in a subsequent request to get the next set of
	// contacts. This will not be set for the last response in the list of
	// pages.
	NextPageToken *PageToken `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *GetContactsResponse) Reset() {
	*x = GetContactsResponse{}
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactsResponse) ProtoMessage() {}

func (x *GetContactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactsResponse.ProtoReflect.Descriptor instead.
func (*GetContactsResponse) Descriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetContactsResponse) GetResult() GetContactsResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetContactsResponse_OK
}

func (x *GetContactsResponse) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *GetContactsResponse) GetNextPageToken() *PageToken {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The contact's phone number
	PhoneNumber *v1.PhoneNumber `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The contact's current status
	Status *ContactStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{6}
}

func (x *Contact) GetPhoneNumber() *v1.PhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *Contact) GetStatus() *ContactStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ContactStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Flag to indicate whether a user has registered with Code and used the app
	// at least once.
	IsRegistered bool `protobuf:"varint,1,opt,name=is_registered,json=isRegistered,proto3" json:"is_registered,omitempty"`
	// Flag to indicate whether a user has been invited to Code.
	//
	// todo: This field will be deprecated after the invite phase is complete.
	IsInvited bool `protobuf:"varint,2,opt,name=is_invited,json=isInvited,proto3" json:"is_invited,omitempty"`
	// Flag to indicate whether a user's invitation to Code has been revoked.
	//
	// todo: This field will be deprecated after the invite phase is complete.
	IsInviteRevoked bool `protobuf:"varint,3,opt,name=is_invite_revoked,json=isInviteRevoked,proto3" json:"is_invite_revoked,omitempty"`
}

func (x *ContactStatus) Reset() {
	*x = ContactStatus{}
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContactStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactStatus) ProtoMessage() {}

func (x *ContactStatus) ProtoReflect() protoreflect.Message {
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactStatus.ProtoReflect.Descriptor instead.
func (*ContactStatus) Descriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{7}
}

func (x *ContactStatus) GetIsRegistered() bool {
	if x != nil {
		return x.IsRegistered
	}
	return false
}

func (x *ContactStatus) GetIsInvited() bool {
	if x != nil {
		return x.IsInvited
	}
	return false
}

func (x *ContactStatus) GetIsInviteRevoked() bool {
	if x != nil {
		return x.IsInviteRevoked
	}
	return false
}

type PageToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PageToken) Reset() {
	*x = PageToken{}
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageToken) ProtoMessage() {}

func (x *PageToken) ProtoReflect() protoreflect.Message {
	mi := &file_contact_v1_contact_list_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageToken.ProtoReflect.Descriptor instead.
func (*PageToken) Descriptor() ([]byte, []int) {
	return file_contact_v1_contact_list_service_proto_rawDescGZIP(), []int{8}
}

func (x *PageToken) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_contact_v1_contact_list_service_proto protoreflect.FileDescriptor

var file_contact_v1_contact_list_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x02, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x53, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e,
	0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80,
	0x08, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0xae, 0x02, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5e, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x60, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22, 0xc3, 0x02, 0x0a,
	0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4c,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x22, 0x72, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x22, 0xf5, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a,
	0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x41, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3e,
	0x0a, 0x1c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x69,
	0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4f, 0x6e, 0x6c,
	0x79, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0xf1,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x92, 0x01, 0x03, 0x10,
	0x80, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x10, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x00, 0x22, 0x95, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x48,
	0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7f, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x22, 0x2d, 0x0a, 0x09, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x7a, 0x05, 0x10, 0x01,
	0x18, 0x80, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xa4, 0x02, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x77, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x69, 0x6e, 0x63,
	0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x5a,
	0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x65,
	0x2d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0xa2, 0x02, 0x0c, 0x43, 0x50,
	0x42, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_contact_v1_contact_list_service_proto_rawDescOnce sync.Once
	file_contact_v1_contact_list_service_proto_rawDescData = file_contact_v1_contact_list_service_proto_rawDesc
)

func file_contact_v1_contact_list_service_proto_rawDescGZIP() []byte {
	file_contact_v1_contact_list_service_proto_rawDescOnce.Do(func() {
		file_contact_v1_contact_list_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_contact_v1_contact_list_service_proto_rawDescData)
	})
	return file_contact_v1_contact_list_service_proto_rawDescData
}

var file_contact_v1_contact_list_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_contact_v1_contact_list_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_contact_v1_contact_list_service_proto_goTypes = []any{
	(AddContactsResponse_Result)(0),    // 0: code.contact.v1.AddContactsResponse.Result
	(RemoveContactsResponse_Result)(0), // 1: code.contact.v1.RemoveContactsResponse.Result
	(GetContactsResponse_Result)(0),    // 2: code.contact.v1.GetContactsResponse.Result
	(*AddContactsRequest)(nil),         // 3: code.contact.v1.AddContactsRequest
	(*AddContactsResponse)(nil),        // 4: code.contact.v1.AddContactsResponse
	(*RemoveContactsRequest)(nil),      // 5: code.contact.v1.RemoveContactsRequest
	(*RemoveContactsResponse)(nil),     // 6: code.contact.v1.RemoveContactsResponse
	(*GetContactsRequest)(nil),         // 7: code.contact.v1.GetContactsRequest
	(*GetContactsResponse)(nil),        // 8: code.contact.v1.GetContactsResponse
	(*Contact)(nil),                    // 9: code.contact.v1.Contact
	(*ContactStatus)(nil),              // 10: code.contact.v1.ContactStatus
	(*PageToken)(nil),                  // 11: code.contact.v1.PageToken
	nil,                                // 12: code.contact.v1.AddContactsResponse.ContactStatusEntry
	(*v1.SolanaAccountId)(nil),         // 13: code.common.v1.SolanaAccountId
	(*v1.Signature)(nil),               // 14: code.common.v1.Signature
	(*v1.DataContainerId)(nil),         // 15: code.common.v1.DataContainerId
	(*v1.PhoneNumber)(nil),             // 16: code.common.v1.PhoneNumber
}
var file_contact_v1_contact_list_service_proto_depIdxs = []int32{
	13, // 0: code.contact.v1.AddContactsRequest.owner_account_id:type_name -> code.common.v1.SolanaAccountId
	14, // 1: code.contact.v1.AddContactsRequest.signature:type_name -> code.common.v1.Signature
	15, // 2: code.contact.v1.AddContactsRequest.container_id:type_name -> code.common.v1.DataContainerId
	16, // 3: code.contact.v1.AddContactsRequest.contacts:type_name -> code.common.v1.PhoneNumber
	0,  // 4: code.contact.v1.AddContactsResponse.result:type_name -> code.contact.v1.AddContactsResponse.Result
	12, // 5: code.contact.v1.AddContactsResponse.contact_status:type_name -> code.contact.v1.AddContactsResponse.ContactStatusEntry
	13, // 6: code.contact.v1.RemoveContactsRequest.owner_account_id:type_name -> code.common.v1.SolanaAccountId
	14, // 7: code.contact.v1.RemoveContactsRequest.signature:type_name -> code.common.v1.Signature
	15, // 8: code.contact.v1.RemoveContactsRequest.container_id:type_name -> code.common.v1.DataContainerId
	16, // 9: code.contact.v1.RemoveContactsRequest.contacts:type_name -> code.common.v1.PhoneNumber
	1,  // 10: code.contact.v1.RemoveContactsResponse.result:type_name -> code.contact.v1.RemoveContactsResponse.Result
	13, // 11: code.contact.v1.GetContactsRequest.owner_account_id:type_name -> code.common.v1.SolanaAccountId
	14, // 12: code.contact.v1.GetContactsRequest.signature:type_name -> code.common.v1.Signature
	15, // 13: code.contact.v1.GetContactsRequest.container_id:type_name -> code.common.v1.DataContainerId
	11, // 14: code.contact.v1.GetContactsRequest.page_token:type_name -> code.contact.v1.PageToken
	2,  // 15: code.contact.v1.GetContactsResponse.result:type_name -> code.contact.v1.GetContactsResponse.Result
	9,  // 16: code.contact.v1.GetContactsResponse.contacts:type_name -> code.contact.v1.Contact
	11, // 17: code.contact.v1.GetContactsResponse.next_page_token:type_name -> code.contact.v1.PageToken
	16, // 18: code.contact.v1.Contact.phone_number:type_name -> code.common.v1.PhoneNumber
	10, // 19: code.contact.v1.Contact.status:type_name -> code.contact.v1.ContactStatus
	10, // 20: code.contact.v1.AddContactsResponse.ContactStatusEntry.value:type_name -> code.contact.v1.ContactStatus
	3,  // 21: code.contact.v1.ContactList.AddContacts:input_type -> code.contact.v1.AddContactsRequest
	5,  // 22: code.contact.v1.ContactList.RemoveContacts:input_type -> code.contact.v1.RemoveContactsRequest
	7,  // 23: code.contact.v1.ContactList.GetContacts:input_type -> code.contact.v1.GetContactsRequest
	4,  // 24: code.contact.v1.ContactList.AddContacts:output_type -> code.contact.v1.AddContactsResponse
	6,  // 25: code.contact.v1.ContactList.RemoveContacts:output_type -> code.contact.v1.RemoveContactsResponse
	8,  // 26: code.contact.v1.ContactList.GetContacts:output_type -> code.contact.v1.GetContactsResponse
	24, // [24:27] is the sub-list for method output_type
	21, // [21:24] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_contact_v1_contact_list_service_proto_init() }
func file_contact_v1_contact_list_service_proto_init() {
	if File_contact_v1_contact_list_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contact_v1_contact_list_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contact_v1_contact_list_service_proto_goTypes,
		DependencyIndexes: file_contact_v1_contact_list_service_proto_depIdxs,
		EnumInfos:         file_contact_v1_contact_list_service_proto_enumTypes,
		MessageInfos:      file_contact_v1_contact_list_service_proto_msgTypes,
	}.Build()
	File_contact_v1_contact_list_service_proto = out.File
	file_contact_v1_contact_list_service_proto_rawDesc = nil
	file_contact_v1_contact_list_service_proto_goTypes = nil
	file_contact_v1_contact_list_service_proto_depIdxs = nil
}
