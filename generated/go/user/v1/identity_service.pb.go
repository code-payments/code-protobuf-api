// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: user/v1/identity_service.proto

package user

import (
	v1 "github.com/code-wallet/code-protobuf-api/generated/go/common/v1"
	v11 "github.com/code-wallet/code-protobuf-api/generated/go/phone/v1"
	v2 "github.com/code-wallet/code-protobuf-api/generated/go/transaction/v2"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LinkAccountResponse_Result int32

const (
	LinkAccountResponse_OK LinkAccountResponse_Result = 0
	// The provided token is invalid. A token may be invalid for a number of
	// reasons including: it's already been used, has been modified by the
	// client or has expired.
	LinkAccountResponse_INVALID_TOKEN LinkAccountResponse_Result = 1
	// The client is rate limited (eg. by IP, user ID, etc). The client should
	// retry at a later time.
	LinkAccountResponse_RATE_LIMITED LinkAccountResponse_Result = 2
)

// Enum value maps for LinkAccountResponse_Result.
var (
	LinkAccountResponse_Result_name = map[int32]string{
		0: "OK",
		1: "INVALID_TOKEN",
		2: "RATE_LIMITED",
	}
	LinkAccountResponse_Result_value = map[string]int32{
		"OK":            0,
		"INVALID_TOKEN": 1,
		"RATE_LIMITED":  2,
	}
)

func (x LinkAccountResponse_Result) Enum() *LinkAccountResponse_Result {
	p := new(LinkAccountResponse_Result)
	*p = x
	return p
}

func (x LinkAccountResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkAccountResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_user_v1_identity_service_proto_enumTypes[0].Descriptor()
}

func (LinkAccountResponse_Result) Type() protoreflect.EnumType {
	return &file_user_v1_identity_service_proto_enumTypes[0]
}

func (x LinkAccountResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkAccountResponse_Result.Descriptor instead.
func (LinkAccountResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{1, 0}
}

type UnlinkAccountResponse_Result int32

const (
	UnlinkAccountResponse_OK UnlinkAccountResponse_Result = 0
	// The client attempted to unlink an owner account or identifying feature
	// that never had a valid association.
	UnlinkAccountResponse_NEVER_ASSOCIATED UnlinkAccountResponse_Result = 1
)

// Enum value maps for UnlinkAccountResponse_Result.
var (
	UnlinkAccountResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NEVER_ASSOCIATED",
	}
	UnlinkAccountResponse_Result_value = map[string]int32{
		"OK":               0,
		"NEVER_ASSOCIATED": 1,
	}
)

func (x UnlinkAccountResponse_Result) Enum() *UnlinkAccountResponse_Result {
	p := new(UnlinkAccountResponse_Result)
	*p = x
	return p
}

func (x UnlinkAccountResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnlinkAccountResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_user_v1_identity_service_proto_enumTypes[1].Descriptor()
}

func (UnlinkAccountResponse_Result) Type() protoreflect.EnumType {
	return &file_user_v1_identity_service_proto_enumTypes[1]
}

func (x UnlinkAccountResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnlinkAccountResponse_Result.Descriptor instead.
func (UnlinkAccountResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{3, 0}
}

type GetUserResponse_Result int32

const (
	GetUserResponse_OK GetUserResponse_Result = 0
	// The user doesn't exist
	GetUserResponse_NOT_FOUND GetUserResponse_Result = 1
	// The user is no longer invited
	GetUserResponse_NOT_INVITED GetUserResponse_Result = 2
	// The user exists, but at least one of their timelock accounts is unlocked
	GetUserResponse_UNLOCKED_TIMELOCK_ACCOUNT GetUserResponse_Result = 3
)

// Enum value maps for GetUserResponse_Result.
var (
	GetUserResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
		2: "NOT_INVITED",
		3: "UNLOCKED_TIMELOCK_ACCOUNT",
	}
	GetUserResponse_Result_value = map[string]int32{
		"OK":                        0,
		"NOT_FOUND":                 1,
		"NOT_INVITED":               2,
		"UNLOCKED_TIMELOCK_ACCOUNT": 3,
	}
)

func (x GetUserResponse_Result) Enum() *GetUserResponse_Result {
	p := new(GetUserResponse_Result)
	*p = x
	return p
}

func (x GetUserResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUserResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_user_v1_identity_service_proto_enumTypes[2].Descriptor()
}

func (GetUserResponse_Result) Type() protoreflect.EnumType {
	return &file_user_v1_identity_service_proto_enumTypes[2]
}

func (x GetUserResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUserResponse_Result.Descriptor instead.
func (GetUserResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{5, 0}
}

type LinkAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The public key of the owner account that will be linked to a user.
	OwnerAccountId *v1.SolanaAccountId `protobuf:"bytes,1,opt,name=owner_account_id,json=ownerAccountId,proto3" json:"owner_account_id,omitempty"`
	// The signature is of serialize(LinkAccountRequest) without this field set
	// using the private key of owner_account_id. This validates that the client
	// actually owns the account.
	Signature *v1.Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// A one-time use token that identifies and authenticates the user.
	//
	// Types that are assignable to Token:
	//
	//	*LinkAccountRequest_Phone
	Token isLinkAccountRequest_Token `protobuf_oneof:"token"`
}

func (x *LinkAccountRequest) Reset() {
	*x = LinkAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_identity_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkAccountRequest) ProtoMessage() {}

func (x *LinkAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_identity_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkAccountRequest.ProtoReflect.Descriptor instead.
func (*LinkAccountRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{0}
}

func (x *LinkAccountRequest) GetOwnerAccountId() *v1.SolanaAccountId {
	if x != nil {
		return x.OwnerAccountId
	}
	return nil
}

func (x *LinkAccountRequest) GetSignature() *v1.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (m *LinkAccountRequest) GetToken() isLinkAccountRequest_Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (x *LinkAccountRequest) GetPhone() *v11.PhoneLinkingToken {
	if x, ok := x.GetToken().(*LinkAccountRequest_Phone); ok {
		return x.Phone
	}
	return nil
}

type isLinkAccountRequest_Token interface {
	isLinkAccountRequest_Token()
}

type LinkAccountRequest_Phone struct {
	// A token received after successfully verifying a phone number via a
	// SMS code using the phone verification service.
	Phone *v11.PhoneLinkingToken `protobuf:"bytes,3,opt,name=phone,proto3,oneof"`
}

func (*LinkAccountRequest_Phone) isLinkAccountRequest_Token() {}

type LinkAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result LinkAccountResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.user.v1.LinkAccountResponse_Result" json:"result,omitempty"`
	// The user that was linked to the owner account
	User *User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// The data container where the user can store a copy of their data
	DataContainerId *v1.DataContainerId `protobuf:"bytes,3,opt,name=data_container_id,json=dataContainerId,proto3" json:"data_container_id,omitempty"`
	// Metadata about the user based for the instance of their view
	//
	// Types that are assignable to Metadata:
	//
	//	*LinkAccountResponse_Phone
	Metadata isLinkAccountResponse_Metadata `protobuf_oneof:"metadata"`
}

func (x *LinkAccountResponse) Reset() {
	*x = LinkAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_identity_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkAccountResponse) ProtoMessage() {}

func (x *LinkAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_identity_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkAccountResponse.ProtoReflect.Descriptor instead.
func (*LinkAccountResponse) Descriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{1}
}

func (x *LinkAccountResponse) GetResult() LinkAccountResponse_Result {
	if x != nil {
		return x.Result
	}
	return LinkAccountResponse_OK
}

func (x *LinkAccountResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LinkAccountResponse) GetDataContainerId() *v1.DataContainerId {
	if x != nil {
		return x.DataContainerId
	}
	return nil
}

func (m *LinkAccountResponse) GetMetadata() isLinkAccountResponse_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *LinkAccountResponse) GetPhone() *PhoneMetadata {
	if x, ok := x.GetMetadata().(*LinkAccountResponse_Phone); ok {
		return x.Phone
	}
	return nil
}

type isLinkAccountResponse_Metadata interface {
	isLinkAccountResponse_Metadata()
}

type LinkAccountResponse_Phone struct {
	// Metadata that corresponds to a phone-based identifying feature.
	Phone *PhoneMetadata `protobuf:"bytes,5,opt,name=phone,proto3,oneof"`
}

func (*LinkAccountResponse_Phone) isLinkAccountResponse_Metadata() {}

type UnlinkAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The public key of the owner account that will be unliked.
	OwnerAccountId *v1.SolanaAccountId `protobuf:"bytes,1,opt,name=owner_account_id,json=ownerAccountId,proto3" json:"owner_account_id,omitempty"`
	// The signature is of serialize(UnlinkAccountRequest) without this field set
	// using the private key of owner_account_id. This provides an authentication
	// mechanism to the RPC.
	Signature *v1.Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// Types that are assignable to IdentifyingFeature:
	//
	//	*UnlinkAccountRequest_PhoneNumber
	IdentifyingFeature isUnlinkAccountRequest_IdentifyingFeature `protobuf_oneof:"identifying_feature"`
}

func (x *UnlinkAccountRequest) Reset() {
	*x = UnlinkAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_identity_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlinkAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkAccountRequest) ProtoMessage() {}

func (x *UnlinkAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_identity_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkAccountRequest.ProtoReflect.Descriptor instead.
func (*UnlinkAccountRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{2}
}

func (x *UnlinkAccountRequest) GetOwnerAccountId() *v1.SolanaAccountId {
	if x != nil {
		return x.OwnerAccountId
	}
	return nil
}

func (x *UnlinkAccountRequest) GetSignature() *v1.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (m *UnlinkAccountRequest) GetIdentifyingFeature() isUnlinkAccountRequest_IdentifyingFeature {
	if m != nil {
		return m.IdentifyingFeature
	}
	return nil
}

func (x *UnlinkAccountRequest) GetPhoneNumber() *v1.PhoneNumber {
	if x, ok := x.GetIdentifyingFeature().(*UnlinkAccountRequest_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return nil
}

type isUnlinkAccountRequest_IdentifyingFeature interface {
	isUnlinkAccountRequest_IdentifyingFeature()
}

type UnlinkAccountRequest_PhoneNumber struct {
	// The phone number associated with the owner account.
	PhoneNumber *v1.PhoneNumber `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

func (*UnlinkAccountRequest_PhoneNumber) isUnlinkAccountRequest_IdentifyingFeature() {}

type UnlinkAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result UnlinkAccountResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.user.v1.UnlinkAccountResponse_Result" json:"result,omitempty"`
}

func (x *UnlinkAccountResponse) Reset() {
	*x = UnlinkAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_identity_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlinkAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkAccountResponse) ProtoMessage() {}

func (x *UnlinkAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_identity_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkAccountResponse.ProtoReflect.Descriptor instead.
func (*UnlinkAccountResponse) Descriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{3}
}

func (x *UnlinkAccountResponse) GetResult() UnlinkAccountResponse_Result {
	if x != nil {
		return x.Result
	}
	return UnlinkAccountResponse_OK
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The public key of the owner account that signed this request message.
	OwnerAccountId *v1.SolanaAccountId `protobuf:"bytes,1,opt,name=owner_account_id,json=ownerAccountId,proto3" json:"owner_account_id,omitempty"`
	// The signature is of serialize(GetUserRequest) without this field set
	// using the private key of owner_account_id. This provides an authentication
	// mechanism to the RPC.
	Signature *v1.Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// The user's indentifying feature, which maps to an instance of a view.
	//
	// Types that are assignable to IdentifyingFeature:
	//
	//	*GetUserRequest_PhoneNumber
	IdentifyingFeature isGetUserRequest_IdentifyingFeature `protobuf_oneof:"identifying_feature"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_identity_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_identity_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserRequest) GetOwnerAccountId() *v1.SolanaAccountId {
	if x != nil {
		return x.OwnerAccountId
	}
	return nil
}

func (x *GetUserRequest) GetSignature() *v1.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (m *GetUserRequest) GetIdentifyingFeature() isGetUserRequest_IdentifyingFeature {
	if m != nil {
		return m.IdentifyingFeature
	}
	return nil
}

func (x *GetUserRequest) GetPhoneNumber() *v1.PhoneNumber {
	if x, ok := x.GetIdentifyingFeature().(*GetUserRequest_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return nil
}

type isGetUserRequest_IdentifyingFeature interface {
	isGetUserRequest_IdentifyingFeature()
}

type GetUserRequest_PhoneNumber struct {
	PhoneNumber *v1.PhoneNumber `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

func (*GetUserRequest_PhoneNumber) isGetUserRequest_IdentifyingFeature() {}

type GetUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetUserResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.user.v1.GetUserResponse_Result" json:"result,omitempty"`
	// The user associated with the identifier
	User *User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// The data container where the user can store a copy of their data
	DataContainerId *v1.DataContainerId `protobuf:"bytes,3,opt,name=data_container_id,json=dataContainerId,proto3" json:"data_container_id,omitempty"`
	// Metadata about the user based for the instance of their view
	//
	// Types that are assignable to Metadata:
	//
	//	*GetUserResponse_Phone
	Metadata isGetUserResponse_Metadata `protobuf_oneof:"metadata"`
	// Whether client internal flags are enabled for this user
	EnableInternalFlags bool `protobuf:"varint,6,opt,name=enable_internal_flags,json=enableInternalFlags,proto3" json:"enable_internal_flags,omitempty"`
	// Set of which airdrops the user is eligible to receive
	EligibleAirdrops []v2.AirdropType `protobuf:"varint,7,rep,packed,name=eligible_airdrops,json=eligibleAirdrops,proto3,enum=code.transaction.v2.AirdropType" json:"eligible_airdrops,omitempty"`
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_identity_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_identity_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserResponse) GetResult() GetUserResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetUserResponse_OK
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetUserResponse) GetDataContainerId() *v1.DataContainerId {
	if x != nil {
		return x.DataContainerId
	}
	return nil
}

func (m *GetUserResponse) GetMetadata() isGetUserResponse_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *GetUserResponse) GetPhone() *PhoneMetadata {
	if x, ok := x.GetMetadata().(*GetUserResponse_Phone); ok {
		return x.Phone
	}
	return nil
}

func (x *GetUserResponse) GetEnableInternalFlags() bool {
	if x != nil {
		return x.EnableInternalFlags
	}
	return false
}

func (x *GetUserResponse) GetEligibleAirdrops() []v2.AirdropType {
	if x != nil {
		return x.EligibleAirdrops
	}
	return nil
}

type isGetUserResponse_Metadata interface {
	isGetUserResponse_Metadata()
}

type GetUserResponse_Phone struct {
	// Metadata that corresponds to a phone-based identifying feature.
	Phone *PhoneMetadata `protobuf:"bytes,5,opt,name=phone,proto3,oneof"`
}

func (*GetUserResponse_Phone) isGetUserResponse_Metadata() {}

// User is the highest order of a form of identity.
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's ID
	Id *v1.UserId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The identifying features that are associated with the user
	View *View `protobuf:"bytes,2,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_identity_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_identity_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{6}
}

func (x *User) GetId() *v1.UserId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *User) GetView() *View {
	if x != nil {
		return x.View
	}
	return nil
}

// View is a well-defined set of identifying features. It is contrained to having
// exactly one feature set at a time, for now.
type View struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The phone number associated with a user.
	//
	// Note: This field is mandatory as of right now, since it's the only one
	//
	//	supported to date.
	PhoneNumber *v1.PhoneNumber `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *View) Reset() {
	*x = View{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_identity_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_identity_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{7}
}

func (x *View) GetPhoneNumber() *v1.PhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

type PhoneMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// State that determines whether a phone number is linked to the owner
	// account. A phone number is linked if we can treat it as an alias.
	// This is notably different from association, which answers the question
	// of whether the number was linked at any point in time.
	IsLinked bool `protobuf:"varint,1,opt,name=is_linked,json=isLinked,proto3" json:"is_linked,omitempty"`
}

func (x *PhoneMetadata) Reset() {
	*x = PhoneMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_identity_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneMetadata) ProtoMessage() {}

func (x *PhoneMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_identity_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneMetadata.ProtoReflect.Descriptor instead.
func (*PhoneMetadata) Descriptor() ([]byte, []int) {
	return file_user_v1_identity_service_proto_rawDescGZIP(), []int{8}
}

func (x *PhoneMetadata) GetIsLinked() bool {
	if x != nil {
		return x.IsLinked
	}
	return false
}

var File_user_v1_identity_service_proto protoreflect.FileDescriptor

var file_user_v1_identity_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x15,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x28, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x32,
	0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xff, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x10, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x43, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42,
	0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x48, 0x00, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd6, 0x02, 0x0a, 0x13, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x48, 0x00, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x35, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x41,
	0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x10, 0x02, 0x42, 0x0a, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x97,
	0x02, 0x0a, 0x14, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0e,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x43,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x0a, 0xba, 0xe9,
	0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x42, 0x15, 0x0a, 0x13, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67,
	0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x55, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x45, 0x56, 0x45,
	0x52, 0x5f, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x22, 0x91,
	0x02, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x55, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6c,
	0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x0a, 0xba, 0xe9,
	0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4c, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x48, 0x00, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x15, 0x0a, 0x13, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0xeb, 0x03, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x11,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x48, 0x00, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x4d,
	0x0a, 0x11, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x69, 0x72, 0x64, 0x72,
	0x6f, 0x70, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x65, 0x6c, 0x69,
	0x67, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x22, 0x4f, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x03, 0x42, 0x0a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05,
	0x22, 0x6e, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0a, 0xba, 0xe9,
	0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x0a,
	0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x22, 0x52, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x4a, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0a, 0xba, 0xe9, 0xc0,
	0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x0d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x32, 0x80, 0x02, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x52, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x69, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x69, 0x6e, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x64,
	0x65, 0x2d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b,
	0x75, 0x73, 0x65, 0x72, 0xa2, 0x02, 0x09, 0x43, 0x50, 0x42, 0x55, 0x73, 0x65, 0x72, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_v1_identity_service_proto_rawDescOnce sync.Once
	file_user_v1_identity_service_proto_rawDescData = file_user_v1_identity_service_proto_rawDesc
)

func file_user_v1_identity_service_proto_rawDescGZIP() []byte {
	file_user_v1_identity_service_proto_rawDescOnce.Do(func() {
		file_user_v1_identity_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_v1_identity_service_proto_rawDescData)
	})
	return file_user_v1_identity_service_proto_rawDescData
}

var file_user_v1_identity_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_user_v1_identity_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_user_v1_identity_service_proto_goTypes = []interface{}{
	(LinkAccountResponse_Result)(0),   // 0: code.user.v1.LinkAccountResponse.Result
	(UnlinkAccountResponse_Result)(0), // 1: code.user.v1.UnlinkAccountResponse.Result
	(GetUserResponse_Result)(0),       // 2: code.user.v1.GetUserResponse.Result
	(*LinkAccountRequest)(nil),        // 3: code.user.v1.LinkAccountRequest
	(*LinkAccountResponse)(nil),       // 4: code.user.v1.LinkAccountResponse
	(*UnlinkAccountRequest)(nil),      // 5: code.user.v1.UnlinkAccountRequest
	(*UnlinkAccountResponse)(nil),     // 6: code.user.v1.UnlinkAccountResponse
	(*GetUserRequest)(nil),            // 7: code.user.v1.GetUserRequest
	(*GetUserResponse)(nil),           // 8: code.user.v1.GetUserResponse
	(*User)(nil),                      // 9: code.user.v1.User
	(*View)(nil),                      // 10: code.user.v1.View
	(*PhoneMetadata)(nil),             // 11: code.user.v1.PhoneMetadata
	(*v1.SolanaAccountId)(nil),        // 12: code.common.v1.SolanaAccountId
	(*v1.Signature)(nil),              // 13: code.common.v1.Signature
	(*v11.PhoneLinkingToken)(nil),     // 14: code.phone.v1.PhoneLinkingToken
	(*v1.DataContainerId)(nil),        // 15: code.common.v1.DataContainerId
	(*v1.PhoneNumber)(nil),            // 16: code.common.v1.PhoneNumber
	(v2.AirdropType)(0),               // 17: code.transaction.v2.AirdropType
	(*v1.UserId)(nil),                 // 18: code.common.v1.UserId
}
var file_user_v1_identity_service_proto_depIdxs = []int32{
	12, // 0: code.user.v1.LinkAccountRequest.owner_account_id:type_name -> code.common.v1.SolanaAccountId
	13, // 1: code.user.v1.LinkAccountRequest.signature:type_name -> code.common.v1.Signature
	14, // 2: code.user.v1.LinkAccountRequest.phone:type_name -> code.phone.v1.PhoneLinkingToken
	0,  // 3: code.user.v1.LinkAccountResponse.result:type_name -> code.user.v1.LinkAccountResponse.Result
	9,  // 4: code.user.v1.LinkAccountResponse.user:type_name -> code.user.v1.User
	15, // 5: code.user.v1.LinkAccountResponse.data_container_id:type_name -> code.common.v1.DataContainerId
	11, // 6: code.user.v1.LinkAccountResponse.phone:type_name -> code.user.v1.PhoneMetadata
	12, // 7: code.user.v1.UnlinkAccountRequest.owner_account_id:type_name -> code.common.v1.SolanaAccountId
	13, // 8: code.user.v1.UnlinkAccountRequest.signature:type_name -> code.common.v1.Signature
	16, // 9: code.user.v1.UnlinkAccountRequest.phone_number:type_name -> code.common.v1.PhoneNumber
	1,  // 10: code.user.v1.UnlinkAccountResponse.result:type_name -> code.user.v1.UnlinkAccountResponse.Result
	12, // 11: code.user.v1.GetUserRequest.owner_account_id:type_name -> code.common.v1.SolanaAccountId
	13, // 12: code.user.v1.GetUserRequest.signature:type_name -> code.common.v1.Signature
	16, // 13: code.user.v1.GetUserRequest.phone_number:type_name -> code.common.v1.PhoneNumber
	2,  // 14: code.user.v1.GetUserResponse.result:type_name -> code.user.v1.GetUserResponse.Result
	9,  // 15: code.user.v1.GetUserResponse.user:type_name -> code.user.v1.User
	15, // 16: code.user.v1.GetUserResponse.data_container_id:type_name -> code.common.v1.DataContainerId
	11, // 17: code.user.v1.GetUserResponse.phone:type_name -> code.user.v1.PhoneMetadata
	17, // 18: code.user.v1.GetUserResponse.eligible_airdrops:type_name -> code.transaction.v2.AirdropType
	18, // 19: code.user.v1.User.id:type_name -> code.common.v1.UserId
	10, // 20: code.user.v1.User.view:type_name -> code.user.v1.View
	16, // 21: code.user.v1.View.phone_number:type_name -> code.common.v1.PhoneNumber
	3,  // 22: code.user.v1.Identity.LinkAccount:input_type -> code.user.v1.LinkAccountRequest
	5,  // 23: code.user.v1.Identity.UnlinkAccount:input_type -> code.user.v1.UnlinkAccountRequest
	7,  // 24: code.user.v1.Identity.GetUser:input_type -> code.user.v1.GetUserRequest
	4,  // 25: code.user.v1.Identity.LinkAccount:output_type -> code.user.v1.LinkAccountResponse
	6,  // 26: code.user.v1.Identity.UnlinkAccount:output_type -> code.user.v1.UnlinkAccountResponse
	8,  // 27: code.user.v1.Identity.GetUser:output_type -> code.user.v1.GetUserResponse
	25, // [25:28] is the sub-list for method output_type
	22, // [22:25] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_user_v1_identity_service_proto_init() }
func file_user_v1_identity_service_proto_init() {
	if File_user_v1_identity_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_v1_identity_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_identity_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_identity_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlinkAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_identity_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlinkAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_identity_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_identity_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_identity_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_identity_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_identity_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_user_v1_identity_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*LinkAccountRequest_Phone)(nil),
	}
	file_user_v1_identity_service_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*LinkAccountResponse_Phone)(nil),
	}
	file_user_v1_identity_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*UnlinkAccountRequest_PhoneNumber)(nil),
	}
	file_user_v1_identity_service_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GetUserRequest_PhoneNumber)(nil),
	}
	file_user_v1_identity_service_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*GetUserResponse_Phone)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_v1_identity_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_v1_identity_service_proto_goTypes,
		DependencyIndexes: file_user_v1_identity_service_proto_depIdxs,
		EnumInfos:         file_user_v1_identity_service_proto_enumTypes,
		MessageInfos:      file_user_v1_identity_service_proto_msgTypes,
	}.Build()
	File_user_v1_identity_service_proto = out.File
	file_user_v1_identity_service_proto_rawDesc = nil
	file_user_v1_identity_service_proto_goTypes = nil
	file_user_v1_identity_service_proto_depIdxs = nil
}
