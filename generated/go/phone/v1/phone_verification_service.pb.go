// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: phone/v1/phone_verification_service.proto

package phone

import (
	v1 "github.com/code-payments/code-protobuf-api/generated/go/common/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendVerificationCodeResponse_Result int32

const (
	SendVerificationCodeResponse_OK SendVerificationCodeResponse_Result = 0
	// The phone number is not invited and cannot use Code. The SMS will not
	// be sent until the user is invited. This result is only valid during
	// the invitation stage of the application and won't apply after general
	// public release.
	SendVerificationCodeResponse_NOT_INVITED SendVerificationCodeResponse_Result = 1
	// SMS is rate limited (eg. by IP, phone number, etc) and was not sent.
	// These will be set generously such that real users won't actually hit
	// the limits.
	SendVerificationCodeResponse_RATE_LIMITED SendVerificationCodeResponse_Result = 2
	// The phone number is not real because it fails Twilio lookup.
	SendVerificationCodeResponse_INVALID_PHONE_NUMBER SendVerificationCodeResponse_Result = 3
	// The phone number is valid, but it maps to an unsupported type of phone
	// like a landline or eSIM.
	SendVerificationCodeResponse_UNSUPPORTED_PHONE_TYPE SendVerificationCodeResponse_Result = 4
	// The country associated with the phone number is not supported (eg. it
	// is on the sanctioned list).
	SendVerificationCodeResponse_UNSUPPORTED_COUNTRY SendVerificationCodeResponse_Result = 5
	// The device is not supported (eg. it fails device attestation checks)
	SendVerificationCodeResponse_UNSUPPORTED_DEVICE SendVerificationCodeResponse_Result = 6
)

// Enum value maps for SendVerificationCodeResponse_Result.
var (
	SendVerificationCodeResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_INVITED",
		2: "RATE_LIMITED",
		3: "INVALID_PHONE_NUMBER",
		4: "UNSUPPORTED_PHONE_TYPE",
		5: "UNSUPPORTED_COUNTRY",
		6: "UNSUPPORTED_DEVICE",
	}
	SendVerificationCodeResponse_Result_value = map[string]int32{
		"OK":                     0,
		"NOT_INVITED":            1,
		"RATE_LIMITED":           2,
		"INVALID_PHONE_NUMBER":   3,
		"UNSUPPORTED_PHONE_TYPE": 4,
		"UNSUPPORTED_COUNTRY":    5,
		"UNSUPPORTED_DEVICE":     6,
	}
)

func (x SendVerificationCodeResponse_Result) Enum() *SendVerificationCodeResponse_Result {
	p := new(SendVerificationCodeResponse_Result)
	*p = x
	return p
}

func (x SendVerificationCodeResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendVerificationCodeResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_phone_v1_phone_verification_service_proto_enumTypes[0].Descriptor()
}

func (SendVerificationCodeResponse_Result) Type() protoreflect.EnumType {
	return &file_phone_v1_phone_verification_service_proto_enumTypes[0]
}

func (x SendVerificationCodeResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendVerificationCodeResponse_Result.Descriptor instead.
func (SendVerificationCodeResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_phone_v1_phone_verification_service_proto_rawDescGZIP(), []int{1, 0}
}

type CheckVerificationCodeResponse_Result int32

const (
	CheckVerificationCodeResponse_OK CheckVerificationCodeResponse_Result = 0
	// The provided verification code is invalid. The user may retry
	// enterring the code if this is received. When max attempts are
	// received, NO_VERIFICATION will be returned.
	CheckVerificationCodeResponse_INVALID_CODE CheckVerificationCodeResponse_Result = 1
	// There is no verification in progress for the phone number. Several
	// reasons this can occur include a verification being expired or having
	// reached a maximum check threshold. The client must initiate a new
	// verification using SendVerificationCode.
	CheckVerificationCodeResponse_NO_VERIFICATION CheckVerificationCodeResponse_Result = 2
	// The call is rate limited (eg. by IP, phone number, etc). The code is
	// not verified.
	CheckVerificationCodeResponse_RATE_LIMITED CheckVerificationCodeResponse_Result = 3
)

// Enum value maps for CheckVerificationCodeResponse_Result.
var (
	CheckVerificationCodeResponse_Result_name = map[int32]string{
		0: "OK",
		1: "INVALID_CODE",
		2: "NO_VERIFICATION",
		3: "RATE_LIMITED",
	}
	CheckVerificationCodeResponse_Result_value = map[string]int32{
		"OK":              0,
		"INVALID_CODE":    1,
		"NO_VERIFICATION": 2,
		"RATE_LIMITED":    3,
	}
)

func (x CheckVerificationCodeResponse_Result) Enum() *CheckVerificationCodeResponse_Result {
	p := new(CheckVerificationCodeResponse_Result)
	*p = x
	return p
}

func (x CheckVerificationCodeResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckVerificationCodeResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_phone_v1_phone_verification_service_proto_enumTypes[1].Descriptor()
}

func (CheckVerificationCodeResponse_Result) Type() protoreflect.EnumType {
	return &file_phone_v1_phone_verification_service_proto_enumTypes[1]
}

func (x CheckVerificationCodeResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckVerificationCodeResponse_Result.Descriptor instead.
func (CheckVerificationCodeResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_phone_v1_phone_verification_service_proto_rawDescGZIP(), []int{3, 0}
}

type GetAssociatedPhoneNumberResponse_Result int32

const (
	GetAssociatedPhoneNumberResponse_OK GetAssociatedPhoneNumberResponse_Result = 0
	// A phone number is not associated with the provided owner account.
	GetAssociatedPhoneNumberResponse_NOT_FOUND GetAssociatedPhoneNumberResponse_Result = 1
	// The phone number exists, but is no longer invited
	GetAssociatedPhoneNumberResponse_NOT_INVITED GetAssociatedPhoneNumberResponse_Result = 2
	// The phone number exists, but at least one timelock account is unlocked
	GetAssociatedPhoneNumberResponse_UNLOCKED_TIMELOCK_ACCOUNT GetAssociatedPhoneNumberResponse_Result = 3
)

// Enum value maps for GetAssociatedPhoneNumberResponse_Result.
var (
	GetAssociatedPhoneNumberResponse_Result_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
		2: "NOT_INVITED",
		3: "UNLOCKED_TIMELOCK_ACCOUNT",
	}
	GetAssociatedPhoneNumberResponse_Result_value = map[string]int32{
		"OK":                        0,
		"NOT_FOUND":                 1,
		"NOT_INVITED":               2,
		"UNLOCKED_TIMELOCK_ACCOUNT": 3,
	}
)

func (x GetAssociatedPhoneNumberResponse_Result) Enum() *GetAssociatedPhoneNumberResponse_Result {
	p := new(GetAssociatedPhoneNumberResponse_Result)
	*p = x
	return p
}

func (x GetAssociatedPhoneNumberResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetAssociatedPhoneNumberResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_phone_v1_phone_verification_service_proto_enumTypes[2].Descriptor()
}

func (GetAssociatedPhoneNumberResponse_Result) Type() protoreflect.EnumType {
	return &file_phone_v1_phone_verification_service_proto_enumTypes[2]
}

func (x GetAssociatedPhoneNumberResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetAssociatedPhoneNumberResponse_Result.Descriptor instead.
func (GetAssociatedPhoneNumberResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_phone_v1_phone_verification_service_proto_rawDescGZIP(), []int{5, 0}
}

type SendVerificationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The phone number to send a verification code over SMS to.
	PhoneNumber *v1.PhoneNumber `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// Device token for antispam measures against fake devices
	DeviceToken *v1.DeviceToken `protobuf:"bytes,2,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
}

func (x *SendVerificationCodeRequest) Reset() {
	*x = SendVerificationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phone_v1_phone_verification_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVerificationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVerificationCodeRequest) ProtoMessage() {}

func (x *SendVerificationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phone_v1_phone_verification_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVerificationCodeRequest.ProtoReflect.Descriptor instead.
func (*SendVerificationCodeRequest) Descriptor() ([]byte, []int) {
	return file_phone_v1_phone_verification_service_proto_rawDescGZIP(), []int{0}
}

func (x *SendVerificationCodeRequest) GetPhoneNumber() *v1.PhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *SendVerificationCodeRequest) GetDeviceToken() *v1.DeviceToken {
	if x != nil {
		return x.DeviceToken
	}
	return nil
}

type SendVerificationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result SendVerificationCodeResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.phone.v1.SendVerificationCodeResponse_Result" json:"result,omitempty"`
}

func (x *SendVerificationCodeResponse) Reset() {
	*x = SendVerificationCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phone_v1_phone_verification_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVerificationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVerificationCodeResponse) ProtoMessage() {}

func (x *SendVerificationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_phone_v1_phone_verification_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVerificationCodeResponse.ProtoReflect.Descriptor instead.
func (*SendVerificationCodeResponse) Descriptor() ([]byte, []int) {
	return file_phone_v1_phone_verification_service_proto_rawDescGZIP(), []int{1}
}

func (x *SendVerificationCodeResponse) GetResult() SendVerificationCodeResponse_Result {
	if x != nil {
		return x.Result
	}
	return SendVerificationCodeResponse_OK
}

type CheckVerificationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The phone number being verified.
	PhoneNumber *v1.PhoneNumber `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The verification code received via SMS.
	Code *VerificationCode `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CheckVerificationCodeRequest) Reset() {
	*x = CheckVerificationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phone_v1_phone_verification_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVerificationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVerificationCodeRequest) ProtoMessage() {}

func (x *CheckVerificationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phone_v1_phone_verification_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVerificationCodeRequest.ProtoReflect.Descriptor instead.
func (*CheckVerificationCodeRequest) Descriptor() ([]byte, []int) {
	return file_phone_v1_phone_verification_service_proto_rawDescGZIP(), []int{2}
}

func (x *CheckVerificationCodeRequest) GetPhoneNumber() *v1.PhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *CheckVerificationCodeRequest) GetCode() *VerificationCode {
	if x != nil {
		return x.Code
	}
	return nil
}

type CheckVerificationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result CheckVerificationCodeResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.phone.v1.CheckVerificationCodeResponse_Result" json:"result,omitempty"`
	// The token used to associate an owner account to a user using the verified
	// phone number.
	LinkingToken *PhoneLinkingToken `protobuf:"bytes,2,opt,name=linking_token,json=linkingToken,proto3" json:"linking_token,omitempty"`
}

func (x *CheckVerificationCodeResponse) Reset() {
	*x = CheckVerificationCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phone_v1_phone_verification_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVerificationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVerificationCodeResponse) ProtoMessage() {}

func (x *CheckVerificationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_phone_v1_phone_verification_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVerificationCodeResponse.ProtoReflect.Descriptor instead.
func (*CheckVerificationCodeResponse) Descriptor() ([]byte, []int) {
	return file_phone_v1_phone_verification_service_proto_rawDescGZIP(), []int{3}
}

func (x *CheckVerificationCodeResponse) GetResult() CheckVerificationCodeResponse_Result {
	if x != nil {
		return x.Result
	}
	return CheckVerificationCodeResponse_OK
}

func (x *CheckVerificationCodeResponse) GetLinkingToken() *PhoneLinkingToken {
	if x != nil {
		return x.LinkingToken
	}
	return nil
}

type GetAssociatedPhoneNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The public key of the owner account that is being queried for a linked
	// phone number.
	OwnerAccountId *v1.SolanaAccountId `protobuf:"bytes,1,opt,name=owner_account_id,json=ownerAccountId,proto3" json:"owner_account_id,omitempty"`
	// The signature is of serialize(GetAssociatedPhoneNumberRequest) without
	// this field set using the private key of owner_account_id. This provides
	// an authentication mechanism to the RPC.
	Signature *v1.Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *GetAssociatedPhoneNumberRequest) Reset() {
	*x = GetAssociatedPhoneNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phone_v1_phone_verification_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssociatedPhoneNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssociatedPhoneNumberRequest) ProtoMessage() {}

func (x *GetAssociatedPhoneNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phone_v1_phone_verification_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssociatedPhoneNumberRequest.ProtoReflect.Descriptor instead.
func (*GetAssociatedPhoneNumberRequest) Descriptor() ([]byte, []int) {
	return file_phone_v1_phone_verification_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAssociatedPhoneNumberRequest) GetOwnerAccountId() *v1.SolanaAccountId {
	if x != nil {
		return x.OwnerAccountId
	}
	return nil
}

func (x *GetAssociatedPhoneNumberRequest) GetSignature() *v1.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

type GetAssociatedPhoneNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GetAssociatedPhoneNumberResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=code.phone.v1.GetAssociatedPhoneNumberResponse_Result" json:"result,omitempty"`
	// The latest phone number associated with the owner account.
	PhoneNumber *v1.PhoneNumber `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// State that determines whether a phone number is linked to the owner
	// account. A phone number is linked if we can treat it as an alias.
	// This is notably different from association, which answers the question
	// of whether the number was linked at any point in time.
	IsLinked bool `protobuf:"varint,3,opt,name=is_linked,json=isLinked,proto3" json:"is_linked,omitempty"`
}

func (x *GetAssociatedPhoneNumberResponse) Reset() {
	*x = GetAssociatedPhoneNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phone_v1_phone_verification_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssociatedPhoneNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssociatedPhoneNumberResponse) ProtoMessage() {}

func (x *GetAssociatedPhoneNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_phone_v1_phone_verification_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssociatedPhoneNumberResponse.ProtoReflect.Descriptor instead.
func (*GetAssociatedPhoneNumberResponse) Descriptor() ([]byte, []int) {
	return file_phone_v1_phone_verification_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAssociatedPhoneNumberResponse) GetResult() GetAssociatedPhoneNumberResponse_Result {
	if x != nil {
		return x.Result
	}
	return GetAssociatedPhoneNumberResponse_OK
}

func (x *GetAssociatedPhoneNumberResponse) GetPhoneNumber() *v1.PhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *GetAssociatedPhoneNumberResponse) GetIsLinked() bool {
	if x != nil {
		return x.IsLinked
	}
	return false
}

type VerificationCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A 4-10 digit numerical code.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *VerificationCode) Reset() {
	*x = VerificationCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phone_v1_phone_verification_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationCode) ProtoMessage() {}

func (x *VerificationCode) ProtoReflect() protoreflect.Message {
	mi := &file_phone_v1_phone_verification_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationCode.ProtoReflect.Descriptor instead.
func (*VerificationCode) Descriptor() ([]byte, []int) {
	return file_phone_v1_phone_verification_service_proto_rawDescGZIP(), []int{6}
}

func (x *VerificationCode) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// A one-time use token that can be provided to the Identity service to link an
// owner account to a user with the verified phone number. The client should
// treat this token as opaque.
type PhoneLinkingToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The verified phone number.
	PhoneNumber *v1.PhoneNumber `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The code that verified the phone number.
	Code *VerificationCode `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *PhoneLinkingToken) Reset() {
	*x = PhoneLinkingToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phone_v1_phone_verification_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneLinkingToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneLinkingToken) ProtoMessage() {}

func (x *PhoneLinkingToken) ProtoReflect() protoreflect.Message {
	mi := &file_phone_v1_phone_verification_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneLinkingToken.ProtoReflect.Descriptor instead.
func (*PhoneLinkingToken) Descriptor() ([]byte, []int) {
	return file_phone_v1_phone_verification_service_proto_rawDescGZIP(), []int{7}
}

func (x *PhoneLinkingToken) GetPhoneNumber() *v1.PhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *PhoneLinkingToken) GetCode() *VerificationCode {
	if x != nil {
		return x.Code
	}
	return nil
}

var File_phone_v1_phone_verification_service_proto protoreflect.FileDescriptor

var file_phone_v1_phone_verification_service_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6f, 0x64,
	0x65, 0x2e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x1b, 0x53,
	0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0c, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0a, 0xba,
	0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x87, 0x02, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e,
	0x56, 0x49, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x41, 0x54, 0x45, 0x5f,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45,
	0x52, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54,
	0x45, 0x44, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x04, 0x12,
	0x17, 0x0a, 0x13, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x53, 0x55,
	0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x06,
	0x22, 0xab, 0x01, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4a, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3f, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0xba, 0xe9,
	0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xfe,
	0x01, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x33, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x45, 0x0a,
	0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x49, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x5f, 0x56,
	0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x10, 0x0a,
	0x0c, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x10, 0x03, 0x22,
	0xbd, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65,
	0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x0a,
	0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0xa0, 0x02, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65,
	0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x22, 0x4f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x5f,
	0x54, 0x49, 0x4d, 0x45, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x10, 0x03, 0x22, 0x40, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xba, 0xe9, 0xc0, 0x03, 0x11, 0x72, 0x0f, 0x32, 0x0d,
	0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x34, 0x2c, 0x31, 0x30, 0x7d, 0x24, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x11, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4a, 0x0a, 0x0c, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0a, 0xba,
	0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x32, 0xf5, 0x02, 0x0a, 0x11, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a,
	0x14, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72,
	0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x6f, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x69, 0x6e, 0x63, 0x2e, 0x67,
	0x65, 0x6e, 0x2e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x5a, 0x46, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0xa2, 0x02, 0x0a, 0x43, 0x50, 0x42, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_phone_v1_phone_verification_service_proto_rawDescOnce sync.Once
	file_phone_v1_phone_verification_service_proto_rawDescData = file_phone_v1_phone_verification_service_proto_rawDesc
)

func file_phone_v1_phone_verification_service_proto_rawDescGZIP() []byte {
	file_phone_v1_phone_verification_service_proto_rawDescOnce.Do(func() {
		file_phone_v1_phone_verification_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_phone_v1_phone_verification_service_proto_rawDescData)
	})
	return file_phone_v1_phone_verification_service_proto_rawDescData
}

var file_phone_v1_phone_verification_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_phone_v1_phone_verification_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_phone_v1_phone_verification_service_proto_goTypes = []interface{}{
	(SendVerificationCodeResponse_Result)(0),     // 0: code.phone.v1.SendVerificationCodeResponse.Result
	(CheckVerificationCodeResponse_Result)(0),    // 1: code.phone.v1.CheckVerificationCodeResponse.Result
	(GetAssociatedPhoneNumberResponse_Result)(0), // 2: code.phone.v1.GetAssociatedPhoneNumberResponse.Result
	(*SendVerificationCodeRequest)(nil),          // 3: code.phone.v1.SendVerificationCodeRequest
	(*SendVerificationCodeResponse)(nil),         // 4: code.phone.v1.SendVerificationCodeResponse
	(*CheckVerificationCodeRequest)(nil),         // 5: code.phone.v1.CheckVerificationCodeRequest
	(*CheckVerificationCodeResponse)(nil),        // 6: code.phone.v1.CheckVerificationCodeResponse
	(*GetAssociatedPhoneNumberRequest)(nil),      // 7: code.phone.v1.GetAssociatedPhoneNumberRequest
	(*GetAssociatedPhoneNumberResponse)(nil),     // 8: code.phone.v1.GetAssociatedPhoneNumberResponse
	(*VerificationCode)(nil),                     // 9: code.phone.v1.VerificationCode
	(*PhoneLinkingToken)(nil),                    // 10: code.phone.v1.PhoneLinkingToken
	(*v1.PhoneNumber)(nil),                       // 11: code.common.v1.PhoneNumber
	(*v1.DeviceToken)(nil),                       // 12: code.common.v1.DeviceToken
	(*v1.SolanaAccountId)(nil),                   // 13: code.common.v1.SolanaAccountId
	(*v1.Signature)(nil),                         // 14: code.common.v1.Signature
}
var file_phone_v1_phone_verification_service_proto_depIdxs = []int32{
	11, // 0: code.phone.v1.SendVerificationCodeRequest.phone_number:type_name -> code.common.v1.PhoneNumber
	12, // 1: code.phone.v1.SendVerificationCodeRequest.device_token:type_name -> code.common.v1.DeviceToken
	0,  // 2: code.phone.v1.SendVerificationCodeResponse.result:type_name -> code.phone.v1.SendVerificationCodeResponse.Result
	11, // 3: code.phone.v1.CheckVerificationCodeRequest.phone_number:type_name -> code.common.v1.PhoneNumber
	9,  // 4: code.phone.v1.CheckVerificationCodeRequest.code:type_name -> code.phone.v1.VerificationCode
	1,  // 5: code.phone.v1.CheckVerificationCodeResponse.result:type_name -> code.phone.v1.CheckVerificationCodeResponse.Result
	10, // 6: code.phone.v1.CheckVerificationCodeResponse.linking_token:type_name -> code.phone.v1.PhoneLinkingToken
	13, // 7: code.phone.v1.GetAssociatedPhoneNumberRequest.owner_account_id:type_name -> code.common.v1.SolanaAccountId
	14, // 8: code.phone.v1.GetAssociatedPhoneNumberRequest.signature:type_name -> code.common.v1.Signature
	2,  // 9: code.phone.v1.GetAssociatedPhoneNumberResponse.result:type_name -> code.phone.v1.GetAssociatedPhoneNumberResponse.Result
	11, // 10: code.phone.v1.GetAssociatedPhoneNumberResponse.phone_number:type_name -> code.common.v1.PhoneNumber
	11, // 11: code.phone.v1.PhoneLinkingToken.phone_number:type_name -> code.common.v1.PhoneNumber
	9,  // 12: code.phone.v1.PhoneLinkingToken.code:type_name -> code.phone.v1.VerificationCode
	3,  // 13: code.phone.v1.PhoneVerification.SendVerificationCode:input_type -> code.phone.v1.SendVerificationCodeRequest
	5,  // 14: code.phone.v1.PhoneVerification.CheckVerificationCode:input_type -> code.phone.v1.CheckVerificationCodeRequest
	7,  // 15: code.phone.v1.PhoneVerification.GetAssociatedPhoneNumber:input_type -> code.phone.v1.GetAssociatedPhoneNumberRequest
	4,  // 16: code.phone.v1.PhoneVerification.SendVerificationCode:output_type -> code.phone.v1.SendVerificationCodeResponse
	6,  // 17: code.phone.v1.PhoneVerification.CheckVerificationCode:output_type -> code.phone.v1.CheckVerificationCodeResponse
	8,  // 18: code.phone.v1.PhoneVerification.GetAssociatedPhoneNumber:output_type -> code.phone.v1.GetAssociatedPhoneNumberResponse
	16, // [16:19] is the sub-list for method output_type
	13, // [13:16] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_phone_v1_phone_verification_service_proto_init() }
func file_phone_v1_phone_verification_service_proto_init() {
	if File_phone_v1_phone_verification_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_phone_v1_phone_verification_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVerificationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phone_v1_phone_verification_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVerificationCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phone_v1_phone_verification_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVerificationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phone_v1_phone_verification_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVerificationCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phone_v1_phone_verification_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssociatedPhoneNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phone_v1_phone_verification_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssociatedPhoneNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phone_v1_phone_verification_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phone_v1_phone_verification_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneLinkingToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_phone_v1_phone_verification_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_phone_v1_phone_verification_service_proto_goTypes,
		DependencyIndexes: file_phone_v1_phone_verification_service_proto_depIdxs,
		EnumInfos:         file_phone_v1_phone_verification_service_proto_enumTypes,
		MessageInfos:      file_phone_v1_phone_verification_service_proto_msgTypes,
	}.Build()
	File_phone_v1_phone_verification_service_proto = out.File
	file_phone_v1_phone_verification_service_proto_rawDesc = nil
	file_phone_v1_phone_verification_service_proto_goTypes = nil
	file_phone_v1_phone_verification_service_proto_depIdxs = nil
}
