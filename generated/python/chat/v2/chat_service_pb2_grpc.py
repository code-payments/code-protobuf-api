# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from chat.v2 import chat_service_pb2 as chat_dot_v2_dot_chat__service__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in chat/v2/chat_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ChatStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetChats = channel.unary_unary(
                '/code.chat.v2.Chat/GetChats',
                request_serializer=chat_dot_v2_dot_chat__service__pb2.GetChatsRequest.SerializeToString,
                response_deserializer=chat_dot_v2_dot_chat__service__pb2.GetChatsResponse.FromString,
                _registered_method=True)
        self.GetMessages = channel.unary_unary(
                '/code.chat.v2.Chat/GetMessages',
                request_serializer=chat_dot_v2_dot_chat__service__pb2.GetMessagesRequest.SerializeToString,
                response_deserializer=chat_dot_v2_dot_chat__service__pb2.GetMessagesResponse.FromString,
                _registered_method=True)
        self.StreamChatEvents = channel.stream_stream(
                '/code.chat.v2.Chat/StreamChatEvents',
                request_serializer=chat_dot_v2_dot_chat__service__pb2.StreamChatEventsRequest.SerializeToString,
                response_deserializer=chat_dot_v2_dot_chat__service__pb2.StreamChatEventsResponse.FromString,
                _registered_method=True)
        self.StartChat = channel.unary_unary(
                '/code.chat.v2.Chat/StartChat',
                request_serializer=chat_dot_v2_dot_chat__service__pb2.StartChatRequest.SerializeToString,
                response_deserializer=chat_dot_v2_dot_chat__service__pb2.StartChatResponse.FromString,
                _registered_method=True)
        self.SendMessage = channel.unary_unary(
                '/code.chat.v2.Chat/SendMessage',
                request_serializer=chat_dot_v2_dot_chat__service__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=chat_dot_v2_dot_chat__service__pb2.SendMessageResponse.FromString,
                _registered_method=True)
        self.AdvancePointer = channel.unary_unary(
                '/code.chat.v2.Chat/AdvancePointer',
                request_serializer=chat_dot_v2_dot_chat__service__pb2.AdvancePointerRequest.SerializeToString,
                response_deserializer=chat_dot_v2_dot_chat__service__pb2.AdvancePointerResponse.FromString,
                _registered_method=True)
        self.RevealIdentity = channel.unary_unary(
                '/code.chat.v2.Chat/RevealIdentity',
                request_serializer=chat_dot_v2_dot_chat__service__pb2.RevealIdentityRequest.SerializeToString,
                response_deserializer=chat_dot_v2_dot_chat__service__pb2.RevealIdentityResponse.FromString,
                _registered_method=True)
        self.SetMuteState = channel.unary_unary(
                '/code.chat.v2.Chat/SetMuteState',
                request_serializer=chat_dot_v2_dot_chat__service__pb2.SetMuteStateRequest.SerializeToString,
                response_deserializer=chat_dot_v2_dot_chat__service__pb2.SetMuteStateResponse.FromString,
                _registered_method=True)
        self.SetSubscriptionState = channel.unary_unary(
                '/code.chat.v2.Chat/SetSubscriptionState',
                request_serializer=chat_dot_v2_dot_chat__service__pb2.SetSubscriptionStateRequest.SerializeToString,
                response_deserializer=chat_dot_v2_dot_chat__service__pb2.SetSubscriptionStateResponse.FromString,
                _registered_method=True)
        self.NotifyIsTyping = channel.unary_unary(
                '/code.chat.v2.Chat/NotifyIsTyping',
                request_serializer=chat_dot_v2_dot_chat__service__pb2.NotifyIsTypingRequest.SerializeToString,
                response_deserializer=chat_dot_v2_dot_chat__service__pb2.NotifyIsTypingResponse.FromString,
                _registered_method=True)


class ChatServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetChats(self, request, context):
        """GetChats gets the set of chats for an owner account using a paged API.
        This RPC is aware of all identities tied to the owner account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessages(self, request, context):
        """GetMessages gets the set of messages for a chat member using a paged API
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamChatEvents(self, request_iterator, context):
        """StreamChatEvents streams chat events in real-time. Chat events include
        messages, pointer updates, etc.

        The streaming protocol is follows:
        1. Client initiates a stream by sending an OpenChatEventStream message.
        2. If an error is encoutered, a ChatStreamEventError message will be
        returned by server and the stream will be closed.
        3. Server will immediately flush initial chat state.
        4. New chat events will be pushed to the stream in real time as they
        are received.

        This RPC supports a keepalive protocol as follows:
        1. Client initiates a stream by sending an OpenChatEventStream message.
        2. Upon stream initialization, server begins the keepalive protocol.
        3. Server sends a ping to the client.
        4. Client responds with a pong as fast as possible, making note of
        the delay for when to expect the next ping.
        5. Steps 3 and 4 are repeated until the stream is explicitly terminated
        or is deemed to be unhealthy.

        Client notes:
        * Client should be careful to process events async, so any responses to pings are
        not delayed.
        * Clients should implement a reasonable backoff strategy upon continued timeout
        failures.
        * Clients that abuse pong messages may have their streams terminated by server.

        At any point in the stream, server will respond with events in real time as
        they are observed. Events sent over the stream should not affect the ping/pong
        protocol timings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartChat(self, request, context):
        """StartChat starts a chat. The RPC call is idempotent and will use existing
        chats whenever applicable within the context of message routing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """SendMessage sends a message to a chat
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdvancePointer(self, request, context):
        """AdvancePointer advances a pointer in message history for a chat member
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevealIdentity(self, request, context):
        """RevealIdentity reveals a chat member's identity if it is anonymous. A chat
        message will be inserted on success.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMuteState(self, request, context):
        """SetMuteState configures a chat member's mute state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSubscriptionState(self, request, context):
        """SetSubscriptionState configures a chat member's susbscription state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyIsTyping(self, request, context):
        """NotifyIsTypingRequest notifies a chat that the sending member is typing.

        These requests are transient, and may be dropped at any point.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetChats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChats,
                    request_deserializer=chat_dot_v2_dot_chat__service__pb2.GetChatsRequest.FromString,
                    response_serializer=chat_dot_v2_dot_chat__service__pb2.GetChatsResponse.SerializeToString,
            ),
            'GetMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessages,
                    request_deserializer=chat_dot_v2_dot_chat__service__pb2.GetMessagesRequest.FromString,
                    response_serializer=chat_dot_v2_dot_chat__service__pb2.GetMessagesResponse.SerializeToString,
            ),
            'StreamChatEvents': grpc.stream_stream_rpc_method_handler(
                    servicer.StreamChatEvents,
                    request_deserializer=chat_dot_v2_dot_chat__service__pb2.StreamChatEventsRequest.FromString,
                    response_serializer=chat_dot_v2_dot_chat__service__pb2.StreamChatEventsResponse.SerializeToString,
            ),
            'StartChat': grpc.unary_unary_rpc_method_handler(
                    servicer.StartChat,
                    request_deserializer=chat_dot_v2_dot_chat__service__pb2.StartChatRequest.FromString,
                    response_serializer=chat_dot_v2_dot_chat__service__pb2.StartChatResponse.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=chat_dot_v2_dot_chat__service__pb2.SendMessageRequest.FromString,
                    response_serializer=chat_dot_v2_dot_chat__service__pb2.SendMessageResponse.SerializeToString,
            ),
            'AdvancePointer': grpc.unary_unary_rpc_method_handler(
                    servicer.AdvancePointer,
                    request_deserializer=chat_dot_v2_dot_chat__service__pb2.AdvancePointerRequest.FromString,
                    response_serializer=chat_dot_v2_dot_chat__service__pb2.AdvancePointerResponse.SerializeToString,
            ),
            'RevealIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.RevealIdentity,
                    request_deserializer=chat_dot_v2_dot_chat__service__pb2.RevealIdentityRequest.FromString,
                    response_serializer=chat_dot_v2_dot_chat__service__pb2.RevealIdentityResponse.SerializeToString,
            ),
            'SetMuteState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMuteState,
                    request_deserializer=chat_dot_v2_dot_chat__service__pb2.SetMuteStateRequest.FromString,
                    response_serializer=chat_dot_v2_dot_chat__service__pb2.SetMuteStateResponse.SerializeToString,
            ),
            'SetSubscriptionState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSubscriptionState,
                    request_deserializer=chat_dot_v2_dot_chat__service__pb2.SetSubscriptionStateRequest.FromString,
                    response_serializer=chat_dot_v2_dot_chat__service__pb2.SetSubscriptionStateResponse.SerializeToString,
            ),
            'NotifyIsTyping': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyIsTyping,
                    request_deserializer=chat_dot_v2_dot_chat__service__pb2.NotifyIsTypingRequest.FromString,
                    response_serializer=chat_dot_v2_dot_chat__service__pb2.NotifyIsTypingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'code.chat.v2.Chat', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('code.chat.v2.Chat', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Chat(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetChats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.chat.v2.Chat/GetChats',
            chat_dot_v2_dot_chat__service__pb2.GetChatsRequest.SerializeToString,
            chat_dot_v2_dot_chat__service__pb2.GetChatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.chat.v2.Chat/GetMessages',
            chat_dot_v2_dot_chat__service__pb2.GetMessagesRequest.SerializeToString,
            chat_dot_v2_dot_chat__service__pb2.GetMessagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamChatEvents(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/code.chat.v2.Chat/StreamChatEvents',
            chat_dot_v2_dot_chat__service__pb2.StreamChatEventsRequest.SerializeToString,
            chat_dot_v2_dot_chat__service__pb2.StreamChatEventsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.chat.v2.Chat/StartChat',
            chat_dot_v2_dot_chat__service__pb2.StartChatRequest.SerializeToString,
            chat_dot_v2_dot_chat__service__pb2.StartChatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.chat.v2.Chat/SendMessage',
            chat_dot_v2_dot_chat__service__pb2.SendMessageRequest.SerializeToString,
            chat_dot_v2_dot_chat__service__pb2.SendMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AdvancePointer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.chat.v2.Chat/AdvancePointer',
            chat_dot_v2_dot_chat__service__pb2.AdvancePointerRequest.SerializeToString,
            chat_dot_v2_dot_chat__service__pb2.AdvancePointerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RevealIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.chat.v2.Chat/RevealIdentity',
            chat_dot_v2_dot_chat__service__pb2.RevealIdentityRequest.SerializeToString,
            chat_dot_v2_dot_chat__service__pb2.RevealIdentityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetMuteState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.chat.v2.Chat/SetMuteState',
            chat_dot_v2_dot_chat__service__pb2.SetMuteStateRequest.SerializeToString,
            chat_dot_v2_dot_chat__service__pb2.SetMuteStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetSubscriptionState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.chat.v2.Chat/SetSubscriptionState',
            chat_dot_v2_dot_chat__service__pb2.SetSubscriptionStateRequest.SerializeToString,
            chat_dot_v2_dot_chat__service__pb2.SetSubscriptionStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyIsTyping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.chat.v2.Chat/NotifyIsTyping',
            chat_dot_v2_dot_chat__service__pb2.NotifyIsTypingRequest.SerializeToString,
            chat_dot_v2_dot_chat__service__pb2.NotifyIsTypingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
