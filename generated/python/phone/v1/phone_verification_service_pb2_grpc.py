# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from phone.v1 import phone_verification_service_pb2 as phone_dot_v1_dot_phone__verification__service__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in phone/v1/phone_verification_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class PhoneVerificationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendVerificationCode = channel.unary_unary(
                '/code.phone.v1.PhoneVerification/SendVerificationCode',
                request_serializer=phone_dot_v1_dot_phone__verification__service__pb2.SendVerificationCodeRequest.SerializeToString,
                response_deserializer=phone_dot_v1_dot_phone__verification__service__pb2.SendVerificationCodeResponse.FromString,
                _registered_method=True)
        self.CheckVerificationCode = channel.unary_unary(
                '/code.phone.v1.PhoneVerification/CheckVerificationCode',
                request_serializer=phone_dot_v1_dot_phone__verification__service__pb2.CheckVerificationCodeRequest.SerializeToString,
                response_deserializer=phone_dot_v1_dot_phone__verification__service__pb2.CheckVerificationCodeResponse.FromString,
                _registered_method=True)
        self.GetAssociatedPhoneNumber = channel.unary_unary(
                '/code.phone.v1.PhoneVerification/GetAssociatedPhoneNumber',
                request_serializer=phone_dot_v1_dot_phone__verification__service__pb2.GetAssociatedPhoneNumberRequest.SerializeToString,
                response_deserializer=phone_dot_v1_dot_phone__verification__service__pb2.GetAssociatedPhoneNumberResponse.FromString,
                _registered_method=True)


class PhoneVerificationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendVerificationCode(self, request, context):
        """SendVerificationCode sends a verification code to the provided phone number
        over SMS. If an active verification is already taking place, the existing code
        will be resent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckVerificationCode(self, request, context):
        """CheckVerificationCode validates a verification code. On success, a one-time use
        token to link an owner account is provided. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssociatedPhoneNumber(self, request, context):
        """GetAssociatedPhoneNumber gets the latest verified phone number linked to an owner account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PhoneVerificationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendVerificationCode': grpc.unary_unary_rpc_method_handler(
                    servicer.SendVerificationCode,
                    request_deserializer=phone_dot_v1_dot_phone__verification__service__pb2.SendVerificationCodeRequest.FromString,
                    response_serializer=phone_dot_v1_dot_phone__verification__service__pb2.SendVerificationCodeResponse.SerializeToString,
            ),
            'CheckVerificationCode': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckVerificationCode,
                    request_deserializer=phone_dot_v1_dot_phone__verification__service__pb2.CheckVerificationCodeRequest.FromString,
                    response_serializer=phone_dot_v1_dot_phone__verification__service__pb2.CheckVerificationCodeResponse.SerializeToString,
            ),
            'GetAssociatedPhoneNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssociatedPhoneNumber,
                    request_deserializer=phone_dot_v1_dot_phone__verification__service__pb2.GetAssociatedPhoneNumberRequest.FromString,
                    response_serializer=phone_dot_v1_dot_phone__verification__service__pb2.GetAssociatedPhoneNumberResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'code.phone.v1.PhoneVerification', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('code.phone.v1.PhoneVerification', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PhoneVerification(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendVerificationCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.phone.v1.PhoneVerification/SendVerificationCode',
            phone_dot_v1_dot_phone__verification__service__pb2.SendVerificationCodeRequest.SerializeToString,
            phone_dot_v1_dot_phone__verification__service__pb2.SendVerificationCodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckVerificationCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.phone.v1.PhoneVerification/CheckVerificationCode',
            phone_dot_v1_dot_phone__verification__service__pb2.CheckVerificationCodeRequest.SerializeToString,
            phone_dot_v1_dot_phone__verification__service__pb2.CheckVerificationCodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAssociatedPhoneNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/code.phone.v1.PhoneVerification/GetAssociatedPhoneNumber',
            phone_dot_v1_dot_phone__verification__service__pb2.GetAssociatedPhoneNumberRequest.SerializeToString,
            phone_dot_v1_dot_phone__verification__service__pb2.GetAssociatedPhoneNumberResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
