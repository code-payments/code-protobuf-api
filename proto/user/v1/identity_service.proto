syntax = "proto3";

package code.user.v1;

option go_package = "github.com/code-payments/code-protobuf-api/generated/go/user/v1;user";
option java_package = "com.codeinc.gen.user.v1";
option objc_class_prefix = "CPBUserV1";

import "common/v1/model.proto";
import "phone/v1/phone_verification_service.proto";
import "transaction/v2/transaction_service.proto";
import "validate/validate.proto";

// Service for managing user identities, account linking, and preferences.
service IdentityService {
    // Account linking and user management
    rpc LinkAccount(LinkAccountRequest) returns (LinkAccountResponse);
    rpc UnlinkAccount(UnlinkAccountRequest) returns (UnlinkAccountResponse);
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc UpdatePreferences(UpdatePreferencesRequest) returns (UpdatePreferencesResponse);

    // Authentication and authorization
    rpc LoginToThirdPartyApp(LoginToThirdPartyAppRequest) returns (LoginToThirdPartyAppResponse);
    rpc GetLoginForThirdPartyApp(GetLoginForThirdPartyAppRequest) returns (GetLoginForThirdPartyAppResponse);
}

// Requests and Responses for IdentityService operations.
message LinkAccountRequest {
    common.v1.SolanaAccountId owner_account_id = 1 [(validate.rules).message.required = true];
    common.v1.Signature signature = 2 [(validate.rules).message.required = true];
    oneof token {
        phone.v1.PhoneLinkingToken phone = 3 [(validate.rules).message.required = true];
        // Placeholder for future token types for alternative verification methods.
    }
}

message LinkAccountResponse {
    enum Result { OK = 0; INVALID_TOKEN = 1; RATE_LIMITED = 2; }
    Result result = 1;
    User user = 2;
    common.v1.DataContainerId data_container_id = 3;
    oneof metadata {
        PhoneMetadata phone = 5 [(validate.rules).message.required = true];
        // Placeholder for future metadata types for additional identifying features.
    }
}

message UnlinkAccountRequest {
    common.v1.SolanaAccountId owner_account_id = 1 [(validate.rules).message.required = true];
    common.v1.Signature signature = 2 [(validate.rules).message.required = true];
    oneof identifying_feature {
        common.v1.PhoneNumber phone_number = 4 [(validate.rules).message.required = true];
        // Placeholder for future identifying features.
    }
}

message UnlinkAccountResponse {
    enum Result { OK = 0; NEVER_ASSOCIATED = 1; }
    Result result = 1;
}

message GetUserRequest {
    common.v1.SolanaAccountId owner_account_id = 1 [(validate.rules).message.required = true];
    common.v1.Signature signature = 2 [(validate.rules).message.required = true];
    oneof identifying_feature {
        common.v1.PhoneNumber phone_number = 3 [(validate.rules).message.required = true];
        // Placeholder for future identifying features.
    }
}

message GetUserResponse {
    enum Result { OK = 0; NOT_FOUND = 1; NOT_INVITED = 2; UNLOCKED_TIMELOCK_ACCOUNT = 3; }
    Result result = 1;
    User user = 2;
    common.v1.DataContainerId data_container_id = 3;
    oneof metadata {
        PhoneMetadata phone = 5 [(validate.rules).message.required = true];
        // Placeholder for future metadata types.
    }
    bool enable_internal_flags = 6;
    repeated transaction.v2.AirdropType eligible_airdrops = 7;
}

message UpdatePreferencesRequest {
    common.v1.SolanaAccountId owner_account_id = 1 [(validate.rules).message.required = true];
    common.v1.DataContainerId container_id = 2 [(validate.rules).message.required = true];
    common.v1.Signature signature = 3 [(validate.rules).message.required = true];
    common.v1.Locale locale = 4 [(validate.rules).message.required = true];
}

message UpdatePreferencesResponse {
    enum Result { OK = 0; INVALID_LOCALE = 1; }
    Result result = 1;
}

message LoginToThirdPartyAppRequest {
    common.v1.IntentId intent_id = 1 [(validate.rules).message.required = true];
    common.v1.SolanaAccountId user_id = 2 [(validate.rules).message.required = true];
    common.v1.Signature signature = 3 [(validate.rules).message.required = true];
}

message LoginToThirdPartyAppResponse {
    enum Result {
        OK = 0; REQUEST_NOT_FOUND = 1; PAYMENT_REQUIRED = 2; LOGIN_NOT_SUPPORTED = 3;
        DIFFERENT_LOGIN_EXISTS = 4; INVALID_ACCOUNT = 5;
    }
    Result result = 1;
}

message GetLoginForThirdPartyAppRequest {
    common.v1.IntentId intent_id = 1 [(validate.rules).message.required = true];
    common.v1.SolanaAccountId verifier = 2 [(validate.rules).message.required = true];
    common.v1.Signature signature = 3 [(validate.rules).message.required = true];
}

message GetLoginForThirdPartyAppResponse {
    enum Result { OK = 0; REQUEST_NOT_FOUND = 1; LOGIN_NOT_SUPPORTED = 2; NO_USER_LOGGED_IN = 3; }
    Result result = 1;
    common.v1.SolanaAccountId user_id = 2;
}

// User and related data structures.
message User {
    common.v1.UserId id = 1 [(validate.rules).message.required = true];
    repeated View views = 2; // Supports multiple views for a single user.
}

message View {
    oneof feature {
        common.v1.PhoneNumber phone_number = 1 [(validate.rules).message.required = true];
        // Placeholder for future identifying features.
    }
}

message PhoneMetadata {
    bool is_linked = 1;
}
